(*****************************************)
(*      This file is autogenerated       *)
(*   Any manual changes will be LOST!    *)
(*****************************************)
(* Generated 11.08.2006 14:00:54         *)
(*****************************************)
(* This file should be stored in the     *)
(* same directory as the form/datamodule *)
(* with the corresponding model          *)
(*****************************************)
(* Copyright notice:                     *)
(*                                       *)
(*****************************************)

{$IFNDEF BusinessClasses_Interface.inc}
{$DEFINE BusinessClasses_Interface.inc}

{$IFNDEF BusinessClasses_unitheader}
unit BusinessClasses;
{$ENDIF}

interface

uses
  // interface uses
  // interface dependencies
  // attribute classes
  BoldAttributes,
  // other
  Classes,
  Controls, // for TDate
  SysUtils,
  BoldDefs,
  BoldSubscription,
  BoldDeriver,
  BoldElements,
  BoldDomainElement,
  BoldSystemRT,
  BoldSystem;

type
  { forward declarations of all classes }

  TBusinessClassesRoot = class;
  TBusinessClassesRootList = class;
  TLinksostavlyaet_harakterispoljz_prizn_dobavleniya = class;
  TLinksostavlyaet_harakterispoljz_prizn_dobavleniyaList = class;
  TLinkvhodit_v_vypuskvklyuchaet_razdel = class;
  TLinkvhodit_v_vypuskvklyuchaet_razdelList = class;
  TVyvoditj_v_datu = class;
  TVyvoditj_v_datuList = class;
  TVypusk = class;
  TVypuskList = class;
  TGod_vyhoda = class;
  TGod_vyhodaList = class;
  TKlass_poiska = class;
  TKlass_poiskaList = class;
  TLog_operacii = class;
  TLog_operaciiList = class;
  TNomer_vyhoda = class;
  TNomer_vyhodaList = class;
  TPersona = class;
  TPersonaList = class;
  TSpravochnik = class;
  TSpravochnikList = class;
  TSpravochnik_grupp_vypuskov = class;
  TSpravochnik_grupp_vypuskovList = class;
  TShablon_objyavleniya = class;
  TShablon_objyavleniyaList = class;
  TShablon_razdela = class;
  TShablon_razdelaList = class;
  TOrganizaciya = class;
  TOrganizaciyaList = class;
  TGazeta = class;
  TGazetaList = class;
  TGruppa_vypuskov = class;
  TGruppa_vypuskovList = class;
  TKlyuchi_vklyuch__objyavlenii = class;
  TKlyuchi_vklyuch__objyavleniiList = class;
  TKupon = class;
  TKuponList = class;
  TPriznak_razdela = class;
  TPriznak_razdelaList = class;
  TRazdel_spravochnika = class;
  TRazdel_spravochnikaList = class;
  TTip_vypuska = class;
  TTip_vypuskaList = class;
  TTip_razdelitelya = class;
  TTip_razdelitelyaList = class;
  TTip_ramki = class;
  TTip_ramkiList = class;
  TTip_fona = class;
  TTip_fonaList = class;
  TTolshina_linii = class;
  TTolshina_liniiList = class;
  TObjyavlenie = class;
  TObjyavlenieList = class;
  TRazdel = class;
  TRazdelList = class;
  TKlient = class;
  TKlientList = class;
  TPersonal = class;
  TPersonalList = class;

  TBusinessClassesRoot = class(TBoldObject)
  private
  protected
  public
  end;

  TLinksostavlyaet_harakterispoljz_prizn_dobavleniya = class(TBusinessClassesRoot)
  private
    function _Getispoljz_prizn_dobavleniya: TPriznak_razdela;
    function _Get_M_ispoljz_prizn_dobavleniya: TBoldObjectReference;
    function _Getsostavlyaet_harakter: TKupon;
    function _Get_M_sostavlyaet_harakter: TBoldObjectReference;
  protected
  public
    property M_ispoljz_prizn_dobavleniya: TBoldObjectReference read _Get_M_ispoljz_prizn_dobavleniya;
    property M_sostavlyaet_harakter: TBoldObjectReference read _Get_M_sostavlyaet_harakter;
    property ispoljz_prizn_dobavleniya: TPriznak_razdela read _Getispoljz_prizn_dobavleniya;
    property sostavlyaet_harakter: TKupon read _Getsostavlyaet_harakter;
  end;

  TLinkvhodit_v_vypuskvklyuchaet_razdel = class(TBusinessClassesRoot)
  private
    function _Getvklyuchaet_razdel: TRazdel;
    function _Get_M_vklyuchaet_razdel: TBoldObjectReference;
    function _Getvhodit_v_vypusk: TVypusk;
    function _Get_M_vhodit_v_vypusk: TBoldObjectReference;
  protected
  public
    property M_vklyuchaet_razdel: TBoldObjectReference read _Get_M_vklyuchaet_razdel;
    property M_vhodit_v_vypusk: TBoldObjectReference read _Get_M_vhodit_v_vypusk;
    property vklyuchaet_razdel: TRazdel read _Getvklyuchaet_razdel;
    property vhodit_v_vypusk: TVypusk read _Getvhodit_v_vypusk;
  end;

  TVyvoditj_v_datu = class(TBusinessClassesRoot)
  private
    function _Get_M_Data: TBADate;
    function _GetData: TDate;
    procedure _SetData(const NewValue: TDate);
    function _Getrazresh_v_otd_dni: TObjyavlenie;
    function _Get_M_razresh_v_otd_dni: TBoldObjectReference;
    procedure _Setrazresh_v_otd_dni(const value: TObjyavlenie);
  protected
  public
    property M_Data: TBADate read _Get_M_Data;
    property M_razresh_v_otd_dni: TBoldObjectReference read _Get_M_razresh_v_otd_dni;
    property Data: TDate read _GetData write _SetData;
    property razresh_v_otd_dni: TObjyavlenie read _Getrazresh_v_otd_dni write _Setrazresh_v_otd_dni;
  end;

  TVypusk = class(TBusinessClassesRoot)
  private
    function _Get_M_Nomer_vypuska: TBAInteger;
    function _GetNomer_vypuska: Integer;
    procedure _SetNomer_vypuska(const NewValue: Integer);
    function _Get_M_God_vypuska: TBAInteger;
    function _GetGod_vypuska: Integer;
    procedure _SetGod_vypuska(const NewValue: Integer);
    function _Get_M_YavlTekushim: TBABoolean;
    function _GetYavlTekushim: Boolean;
    procedure _SetYavlTekushim(const NewValue: Boolean);
    function _Get_M_Data_vypuska: TBADate;
    function _GetData_vypuska: TDate;
    procedure _SetData_vypuska(const NewValue: TDate);
    function _Get_M_Otkorretir: TBABoolean;
    function _GetOtkorretir: Boolean;
    procedure _SetOtkorretir(const NewValue: Boolean);
    function _Get_M_GotNaVygr: TBABoolean;
    function _GetGotNaVygr: Boolean;
    procedure _SetGotNaVygr(const NewValue: Boolean);
    function _Get_M_Identifikator: TBAFloat;
    function _GetIdentifikator: double;
    procedure _SetIdentifikator(const NewValue: double);
    function _Get_M_Posl_vypusk_data: TBADate;
    function _GetPosl_vypusk_data: TDate;
    function _Get_M_Tek_vyp_identifikator: TBAFloat;
    function _GetTek_vyp_identifikator: double;
    function _Get_M_Tek_vypusk_data: TBADate;
    function _GetTek_vypusk_data: TDate;
    function _Get_M_Posl_vyp_identifikator: TBAFloat;
    function _GetPosl_vyp_identifikator: double;
    function _Get_M_Identifikator_gaz: TBAInteger;
    function _GetIdentifikator_gaz: Integer;
    function _Get_M_Cvetovoe_oboznachenie: TBAString;
    function _GetCvetovoe_oboznachenie: String;
    procedure _SetCvetovoe_oboznachenie(const NewValue: String);
    function _Get_M_Tek_vypusk_nomer: TBAInteger;
    function _GetTek_vypusk_nomer: Integer;
    function _Get_M_Tek_vypusk_god: TBAInteger;
    function _GetTek_vypusk_god: Integer;
    function _Get_M_Posl_vypusk_nomer: TBAInteger;
    function _GetPosl_vypusk_nomer: Integer;
    function _Get_M_Posl_vypusk_god: TBAInteger;
    function _GetPosl_vypusk_god: Integer;
    function _Get_M_Ident_vyd_razd: TBAFloat;
    function _GetIdent_vyd_razd: double;
    function _Getvklyuchaet_gr_vyp: TGruppa_vypuskov;
    function _Get_M_vklyuchaet_gr_vyp: TBoldObjectReference;
    procedure _Setvklyuchaet_gr_vyp(const value: TGruppa_vypuskov);
    function _Getvhodit_v_gazetu: TGazeta;
    function _Get_M_vhodit_v_gazetu: TBoldObjectReference;
    procedure _Setvhodit_v_gazetu(const value: TGazeta);
    function _Getvklyuchaet_razdel: TRazdelList;
    function _GetLinkvhodit_v_vypuskvklyuchaet_razdel: TLinkvhodit_v_vypuskvklyuchaet_razdelList;
  protected
  public
    property M_Nomer_vypuska: TBAInteger read _Get_M_Nomer_vypuska;
    property M_God_vypuska: TBAInteger read _Get_M_God_vypuska;
    property M_YavlTekushim: TBABoolean read _Get_M_YavlTekushim;
    property M_Data_vypuska: TBADate read _Get_M_Data_vypuska;
    property M_Otkorretir: TBABoolean read _Get_M_Otkorretir;
    property M_GotNaVygr: TBABoolean read _Get_M_GotNaVygr;
    property M_Identifikator: TBAFloat read _Get_M_Identifikator;
    property M_Posl_vypusk_data: TBADate read _Get_M_Posl_vypusk_data;
    property M_Tek_vyp_identifikator: TBAFloat read _Get_M_Tek_vyp_identifikator;
    property M_Tek_vypusk_data: TBADate read _Get_M_Tek_vypusk_data;
    property M_Posl_vyp_identifikator: TBAFloat read _Get_M_Posl_vyp_identifikator;
    property M_Identifikator_gaz: TBAInteger read _Get_M_Identifikator_gaz;
    property M_Cvetovoe_oboznachenie: TBAString read _Get_M_Cvetovoe_oboznachenie;
    property M_Tek_vypusk_nomer: TBAInteger read _Get_M_Tek_vypusk_nomer;
    property M_Tek_vypusk_god: TBAInteger read _Get_M_Tek_vypusk_god;
    property M_Posl_vypusk_nomer: TBAInteger read _Get_M_Posl_vypusk_nomer;
    property M_Posl_vypusk_god: TBAInteger read _Get_M_Posl_vypusk_god;
    property M_Ident_vyd_razd: TBAFloat read _Get_M_Ident_vyd_razd;
    property M_vklyuchaet_gr_vyp: TBoldObjectReference read _Get_M_vklyuchaet_gr_vyp;
    property M_vhodit_v_gazetu: TBoldObjectReference read _Get_M_vhodit_v_gazetu;
    property M_vklyuchaet_razdel: TRazdelList read _Getvklyuchaet_razdel;
    property M_Linkvhodit_v_vypuskvklyuchaet_razdel: TLinkvhodit_v_vypuskvklyuchaet_razdelList read _GetLinkvhodit_v_vypuskvklyuchaet_razdel;
    property Nomer_vypuska: Integer read _GetNomer_vypuska write _SetNomer_vypuska;
    property God_vypuska: Integer read _GetGod_vypuska write _SetGod_vypuska;
    property YavlTekushim: Boolean read _GetYavlTekushim write _SetYavlTekushim;
    property Data_vypuska: TDate read _GetData_vypuska write _SetData_vypuska;
    property Otkorretir: Boolean read _GetOtkorretir write _SetOtkorretir;
    property GotNaVygr: Boolean read _GetGotNaVygr write _SetGotNaVygr;
    property Identifikator: double read _GetIdentifikator write _SetIdentifikator;
    property Posl_vypusk_data: TDate read _GetPosl_vypusk_data;
    property Tek_vyp_identifikator: double read _GetTek_vyp_identifikator;
    property Tek_vypusk_data: TDate read _GetTek_vypusk_data;
    property Posl_vyp_identifikator: double read _GetPosl_vyp_identifikator;
    property Identifikator_gaz: Integer read _GetIdentifikator_gaz;
    property Cvetovoe_oboznachenie: String read _GetCvetovoe_oboznachenie write _SetCvetovoe_oboznachenie;
    property Tek_vypusk_nomer: Integer read _GetTek_vypusk_nomer;
    property Tek_vypusk_god: Integer read _GetTek_vypusk_god;
    property Posl_vypusk_nomer: Integer read _GetPosl_vypusk_nomer;
    property Posl_vypusk_god: Integer read _GetPosl_vypusk_god;
    property Ident_vyd_razd: double read _GetIdent_vyd_razd;
    property vklyuchaet_gr_vyp: TGruppa_vypuskov read _Getvklyuchaet_gr_vyp write _Setvklyuchaet_gr_vyp;
    property vhodit_v_gazetu: TGazeta read _Getvhodit_v_gazetu write _Setvhodit_v_gazetu;
    property vklyuchaet_razdel: TRazdelList read _Getvklyuchaet_razdel;
    property Linkvhodit_v_vypuskvklyuchaet_razdel: TLinkvhodit_v_vypuskvklyuchaet_razdelList read _GetLinkvhodit_v_vypuskvklyuchaet_razdel;
  end;

  TGod_vyhoda = class(TBusinessClassesRoot)
  private
    function _Get_M_God: TBAInteger;
    function _GetGod: Integer;
    procedure _SetGod(const NewValue: Integer);
    function _Get_M_Chislo_dnei: TBAInteger;
    function _GetChislo_dnei: Integer;
    procedure _SetChislo_dnei(const NewValue: Integer);
  protected
  public
    property M_God: TBAInteger read _Get_M_God;
    property M_Chislo_dnei: TBAInteger read _Get_M_Chislo_dnei;
    property God: Integer read _GetGod write _SetGod;
    property Chislo_dnei: Integer read _GetChislo_dnei write _SetChislo_dnei;
  end;

  TKlass_poiska = class(TBusinessClassesRoot)
  private
    function _Get_M_Iskatj_po_klientu: TBABoolean;
    function _GetIskatj_po_klientu: Boolean;
    procedure _SetIskatj_po_klientu(const NewValue: Boolean);
    function _Get_M_Imya_klienta: TBAString;
    function _GetImya_klienta: String;
    procedure _SetImya_klienta(const NewValue: String);
    function _Get_M_Otchestvo_klienta: TBAString;
    function _GetOtchestvo_klienta: String;
    procedure _SetOtchestvo_klienta(const NewValue: String);
    function _Get_M_Iskatj_po_klyuch_slovam: TBABoolean;
    function _GetIskatj_po_klyuch_slovam: Boolean;
    procedure _SetIskatj_po_klyuch_slovam(const NewValue: Boolean);
    function _Get_M_Klyuch_slovo: TBAString;
    function _GetKlyuch_slovo: String;
    procedure _SetKlyuch_slovo(const NewValue: String);
    function _Get_M_Iskatj_po_date_dob: TBABoolean;
    function _GetIskatj_po_date_dob: Boolean;
    procedure _SetIskatj_po_date_dob(const NewValue: Boolean);
    function _Get_M_S_daty_dob: TBADate;
    function _GetS_daty_dob: TDate;
    procedure _SetS_daty_dob(const NewValue: TDate);
    function _Get_M_Po_datu_dob: TBADate;
    function _GetPo_datu_dob: TDate;
    procedure _SetPo_datu_dob(const NewValue: TDate);
    function _Get_M_Seg_data: TBADate;
    function _GetSeg_data: TDate;
    procedure _SetSeg_data(const NewValue: TDate);
    function _Get_M_Nomer_sled_vyp: TBAInteger;
    function _GetNomer_sled_vyp: Integer;
    procedure _SetNomer_sled_vyp(const NewValue: Integer);
    function _Get_M_God_sled_vyp: TBAInteger;
    function _GetGod_sled_vyp: Integer;
    procedure _SetGod_sled_vyp(const NewValue: Integer);
    function _Get_M_Data_sled_vyp: TBADate;
    function _GetData_sled_vyp: TDate;
    procedure _SetData_sled_vyp(const NewValue: TDate);
    function _Get_M_Iskatj_dvoinikov: TBABoolean;
    function _GetIskatj_dvoinikov: Boolean;
    procedure _SetIskatj_dvoinikov(const NewValue: Boolean);
    function _Get_M_Tek_izdanie_ident: TBAInteger;
    function _GetTek_izdanie_ident: Integer;
    procedure _SetTek_izdanie_ident(const NewValue: Integer);
    function _Getispoljz_razdel_poiska: TGazetaList;
  protected
  public
    property M_Iskatj_po_klientu: TBABoolean read _Get_M_Iskatj_po_klientu;
    property M_Imya_klienta: TBAString read _Get_M_Imya_klienta;
    property M_Otchestvo_klienta: TBAString read _Get_M_Otchestvo_klienta;
    property M_Iskatj_po_klyuch_slovam: TBABoolean read _Get_M_Iskatj_po_klyuch_slovam;
    property M_Klyuch_slovo: TBAString read _Get_M_Klyuch_slovo;
    property M_Iskatj_po_date_dob: TBABoolean read _Get_M_Iskatj_po_date_dob;
    property M_S_daty_dob: TBADate read _Get_M_S_daty_dob;
    property M_Po_datu_dob: TBADate read _Get_M_Po_datu_dob;
    property M_Seg_data: TBADate read _Get_M_Seg_data;
    property M_Nomer_sled_vyp: TBAInteger read _Get_M_Nomer_sled_vyp;
    property M_God_sled_vyp: TBAInteger read _Get_M_God_sled_vyp;
    property M_Data_sled_vyp: TBADate read _Get_M_Data_sled_vyp;
    property M_Iskatj_dvoinikov: TBABoolean read _Get_M_Iskatj_dvoinikov;
    property M_Tek_izdanie_ident: TBAInteger read _Get_M_Tek_izdanie_ident;
    property M_ispoljz_razdel_poiska: TGazetaList read _Getispoljz_razdel_poiska;
    property Iskatj_po_klientu: Boolean read _GetIskatj_po_klientu write _SetIskatj_po_klientu;
    property Imya_klienta: String read _GetImya_klienta write _SetImya_klienta;
    property Otchestvo_klienta: String read _GetOtchestvo_klienta write _SetOtchestvo_klienta;
    property Iskatj_po_klyuch_slovam: Boolean read _GetIskatj_po_klyuch_slovam write _SetIskatj_po_klyuch_slovam;
    property Klyuch_slovo: String read _GetKlyuch_slovo write _SetKlyuch_slovo;
    property Iskatj_po_date_dob: Boolean read _GetIskatj_po_date_dob write _SetIskatj_po_date_dob;
    property S_daty_dob: TDate read _GetS_daty_dob write _SetS_daty_dob;
    property Po_datu_dob: TDate read _GetPo_datu_dob write _SetPo_datu_dob;
    property Seg_data: TDate read _GetSeg_data write _SetSeg_data;
    property Nomer_sled_vyp: Integer read _GetNomer_sled_vyp write _SetNomer_sled_vyp;
    property God_sled_vyp: Integer read _GetGod_sled_vyp write _SetGod_sled_vyp;
    property Data_sled_vyp: TDate read _GetData_sled_vyp write _SetData_sled_vyp;
    property Iskatj_dvoinikov: Boolean read _GetIskatj_dvoinikov write _SetIskatj_dvoinikov;
    property Tek_izdanie_ident: Integer read _GetTek_izdanie_ident write _SetTek_izdanie_ident;
    property ispoljz_razdel_poiska: TGazetaList read _Getispoljz_razdel_poiska;
  end;

  TLog_operacii = class(TBusinessClassesRoot)
  private
    function _Get_M_Naimenovanie_operacii: TBAString;
    function _GetNaimenovanie_operacii: String;
    procedure _SetNaimenovanie_operacii(const NewValue: String);
    function _Get_M_Subjekt: TBAString;
    function _GetSubjekt: String;
    function _Get_M_Data_i_vremya: TBAString;
    function _GetData_i_vremya: String;
    function _Get_M_Data: TBADate;
    function _GetData: TDate;
    procedure _SetData(const NewValue: TDate);
    function _Get_M_Vremya: TBAString;
    function _GetVremya: String;
    procedure _SetVremya(const NewValue: String);
    function _Getot_deistvii: TPersonal;
    function _Get_M_ot_deistvii: TBoldObjectReference;
    procedure _Setot_deistvii(const value: TPersonal);
  protected
  public
    property M_Naimenovanie_operacii: TBAString read _Get_M_Naimenovanie_operacii;
    property M_Subjekt: TBAString read _Get_M_Subjekt;
    property M_Data_i_vremya: TBAString read _Get_M_Data_i_vremya;
    property M_Data: TBADate read _Get_M_Data;
    property M_Vremya: TBAString read _Get_M_Vremya;
    property M_ot_deistvii: TBoldObjectReference read _Get_M_ot_deistvii;
    property Naimenovanie_operacii: String read _GetNaimenovanie_operacii write _SetNaimenovanie_operacii;
    property Subjekt: String read _GetSubjekt;
    property Data_i_vremya: String read _GetData_i_vremya;
    property Data: TDate read _GetData write _SetData;
    property Vremya: String read _GetVremya write _SetVremya;
    property ot_deistvii: TPersonal read _Getot_deistvii write _Setot_deistvii;
  end;

  TNomer_vyhoda = class(TBusinessClassesRoot)
  private
    function _Get_M_Nomer: TBAInteger;
    function _GetNomer: Integer;
    procedure _SetNomer(const NewValue: Integer);
    function _Get_M_God: TBAInteger;
    function _GetGod: Integer;
    procedure _SetGod(const NewValue: Integer);
    function _Get_M_Vyhodit: TBABoolean;
    function _GetVyhodit: Boolean;
    procedure _SetVyhodit(const NewValue: Boolean);
    function _Get_M_Vhodit_v_ukaz_period: TBABoolean;
    function _GetVhodit_v_ukaz_period: Boolean;
    function _Getopred_vyhod_po_nom: TObjyavlenie;
    function _Get_M_opred_vyhod_po_nom: TBoldObjectReference;
    procedure _Setopred_vyhod_po_nom(const value: TObjyavlenie);
  protected
  public
    property M_Nomer: TBAInteger read _Get_M_Nomer;
    property M_God: TBAInteger read _Get_M_God;
    property M_Vyhodit: TBABoolean read _Get_M_Vyhodit;
    property M_Vhodit_v_ukaz_period: TBABoolean read _Get_M_Vhodit_v_ukaz_period;
    property M_opred_vyhod_po_nom: TBoldObjectReference read _Get_M_opred_vyhod_po_nom;
    property Nomer: Integer read _GetNomer write _SetNomer;
    property God: Integer read _GetGod write _SetGod;
    property Vyhodit: Boolean read _GetVyhodit write _SetVyhodit;
    property Vhodit_v_ukaz_period: Boolean read _GetVhodit_v_ukaz_period;
    property opred_vyhod_po_nom: TObjyavlenie read _Getopred_vyhod_po_nom write _Setopred_vyhod_po_nom;
  end;

  TPersona = class(TBusinessClassesRoot)
  private
    function _Get_M_Familiya: TBAString;
    function _GetFamiliya: String;
    procedure _SetFamiliya(const NewValue: String);
    function _Get_M_Imya: TBAString;
    function _GetImya: String;
    procedure _SetImya(const NewValue: String);
    function _Get_M_Otchestvo: TBAString;
    function _GetOtchestvo: String;
    procedure _SetOtchestvo(const NewValue: String);
    function _Get_M_Ulica: TBAString;
    function _GetUlica: String;
    procedure _SetUlica(const NewValue: String);
    function _Get_M_Dom: TBAInteger;
    function _GetDom: Integer;
    procedure _SetDom(const NewValue: Integer);
    function _Get_M_Kvartira: TBAInteger;
    function _GetKvartira: Integer;
    procedure _SetKvartira(const NewValue: Integer);
    function _Get_M_Korpus: TBAInteger;
    function _GetKorpus: Integer;
    procedure _SetKorpus(const NewValue: Integer);
    function _Get_M_Mobiljnyi_telefon: TBAString;
    function _GetMobiljnyi_telefon: String;
    procedure _SetMobiljnyi_telefon(const NewValue: String);
    function _Get_M_Rabochii_telefon: TBAString;
    function _GetRabochii_telefon: String;
    procedure _SetRabochii_telefon(const NewValue: String);
    function _Get_M_Domashnii_telefon: TBAString;
    function _GetDomashnii_telefon: String;
    procedure _SetDomashnii_telefon(const NewValue: String);
    function _Get_M_Elektronnyi_adres: TBAString;
    function _GetElektronnyi_adres: String;
    procedure _SetElektronnyi_adres(const NewValue: String);
    function _Get_M_Polnoe_imya: TBAString;
    function _GetPolnoe_imya: String;
  protected
  public
    property M_Familiya: TBAString read _Get_M_Familiya;
    property M_Imya: TBAString read _Get_M_Imya;
    property M_Otchestvo: TBAString read _Get_M_Otchestvo;
    property M_Ulica: TBAString read _Get_M_Ulica;
    property M_Dom: TBAInteger read _Get_M_Dom;
    property M_Kvartira: TBAInteger read _Get_M_Kvartira;
    property M_Korpus: TBAInteger read _Get_M_Korpus;
    property M_Mobiljnyi_telefon: TBAString read _Get_M_Mobiljnyi_telefon;
    property M_Rabochii_telefon: TBAString read _Get_M_Rabochii_telefon;
    property M_Domashnii_telefon: TBAString read _Get_M_Domashnii_telefon;
    property M_Elektronnyi_adres: TBAString read _Get_M_Elektronnyi_adres;
    property M_Polnoe_imya: TBAString read _Get_M_Polnoe_imya;
    property Familiya: String read _GetFamiliya write _SetFamiliya;
    property Imya: String read _GetImya write _SetImya;
    property Otchestvo: String read _GetOtchestvo write _SetOtchestvo;
    property Ulica: String read _GetUlica write _SetUlica;
    property Dom: Integer read _GetDom write _SetDom;
    property Kvartira: Integer read _GetKvartira write _SetKvartira;
    property Korpus: Integer read _GetKorpus write _SetKorpus;
    property Mobiljnyi_telefon: String read _GetMobiljnyi_telefon write _SetMobiljnyi_telefon;
    property Rabochii_telefon: String read _GetRabochii_telefon write _SetRabochii_telefon;
    property Domashnii_telefon: String read _GetDomashnii_telefon write _SetDomashnii_telefon;
    property Elektronnyi_adres: String read _GetElektronnyi_adres write _SetElektronnyi_adres;
    property Polnoe_imya: String read _GetPolnoe_imya;
  end;

  TSpravochnik = class(TBusinessClassesRoot)
  private
    function _Get_M_Naimenovanie: TBAString;
    function _GetNaimenovanie: String;
    procedure _SetNaimenovanie(const NewValue: String);
    function _Get_M_Kommentarii: TBAString;
    function _GetKommentarii: String;
    procedure _SetKommentarii(const NewValue: String);
    function _Get_M_Identifikator: TBAInteger;
    function _GetIdentifikator: Integer;
    procedure _SetIdentifikator(const NewValue: Integer);
  protected
  public
    property M_Naimenovanie: TBAString read _Get_M_Naimenovanie;
    property M_Kommentarii: TBAString read _Get_M_Kommentarii;
    property M_Identifikator: TBAInteger read _Get_M_Identifikator;
    property Naimenovanie: String read _GetNaimenovanie write _SetNaimenovanie;
    property Kommentarii: String read _GetKommentarii write _SetKommentarii;
    property Identifikator: Integer read _GetIdentifikator write _SetIdentifikator;
  end;

  TSpravochnik_grupp_vypuskov = class(TBusinessClassesRoot)
  private
  protected
  public
  end;

  TShablon_objyavleniya = class(TBusinessClassesRoot)
  private
    function _Get_M_Imya_tipa_ramki: TBAString;
    function _GetImya_tipa_ramki: String;
    function _Get_M_Imya_tipa_fona: TBAString;
    function _GetImya_tipa_fona: String;
    function _Get_M_Imya_tolsh_linii: TBAString;
    function _GetImya_tolsh_linii: String;
    function _Get_M_Ne_opredelena_ramka: TBABoolean;
    function _GetNe_opredelena_ramka: Boolean;
    function _Get_M_Tolshina_linii: TBAFloat;
    function _GetTolshina_linii: double;
    function _Get_M_Ukazatj_parametry_ramki: TBABoolean;
    function _GetUkazatj_parametry_ramki: Boolean;
    procedure _SetUkazatj_parametry_ramki(const NewValue: Boolean);
    function _Get_M_Shirina_ramki: TBAFloat;
    function _GetShirina_ramki: double;
    procedure _SetShirina_ramki(const NewValue: double);
    function _Get_M_Dlina_ramki: TBAFloat;
    function _GetDlina_ramki: double;
    procedure _SetDlina_ramki(const NewValue: double);
    function _Get_M_OtstupSverhu: TBAFloat;
    function _GetOtstupSverhu: double;
    procedure _SetOtstupSverhu(const NewValue: double);
    function _Get_M_OtstupSnizu: TBAFloat;
    function _GetOtstupSnizu: double;
    procedure _SetOtstupSnizu(const NewValue: double);
    function _Get_M_OtstupSprava: TBAFloat;
    function _GetOtstupSprava: double;
    procedure _SetOtstupSprava(const NewValue: double);
    function _Get_M_OtstupSleva: TBAFloat;
    function _GetOtstupSleva: double;
    procedure _SetOtstupSleva(const NewValue: double);
    function _Get_M_Interval_strochn: TBAFloat;
    function _GetInterval_strochn: double;
    procedure _SetInterval_strochn(const NewValue: double);
    function _Getopredelyaet_tip_ramki_dlya: TTip_ramki;
    function _Get_M_opredelyaet_tip_ramki_dlya: TBoldObjectReference;
    procedure _Setopredelyaet_tip_ramki_dlya(const value: TTip_ramki);
    function _Getopr_tip_fona_dlya: TTip_fona;
    function _Get_M_opr_tip_fona_dlya: TBoldObjectReference;
    procedure _Setopr_tip_fona_dlya(const value: TTip_fona);
    function _Getopr_tolsh_ramki_dlya: TTolshina_linii;
    function _Get_M_opr_tolsh_ramki_dlya: TBoldObjectReference;
    procedure _Setopr_tolsh_ramki_dlya(const value: TTolshina_linii);
  protected
  public
    property M_Imya_tipa_ramki: TBAString read _Get_M_Imya_tipa_ramki;
    property M_Imya_tipa_fona: TBAString read _Get_M_Imya_tipa_fona;
    property M_Imya_tolsh_linii: TBAString read _Get_M_Imya_tolsh_linii;
    property M_Ne_opredelena_ramka: TBABoolean read _Get_M_Ne_opredelena_ramka;
    property M_Tolshina_linii: TBAFloat read _Get_M_Tolshina_linii;
    property M_Ukazatj_parametry_ramki: TBABoolean read _Get_M_Ukazatj_parametry_ramki;
    property M_Shirina_ramki: TBAFloat read _Get_M_Shirina_ramki;
    property M_Dlina_ramki: TBAFloat read _Get_M_Dlina_ramki;
    property M_OtstupSverhu: TBAFloat read _Get_M_OtstupSverhu;
    property M_OtstupSnizu: TBAFloat read _Get_M_OtstupSnizu;
    property M_OtstupSprava: TBAFloat read _Get_M_OtstupSprava;
    property M_OtstupSleva: TBAFloat read _Get_M_OtstupSleva;
    property M_Interval_strochn: TBAFloat read _Get_M_Interval_strochn;
    property M_opredelyaet_tip_ramki_dlya: TBoldObjectReference read _Get_M_opredelyaet_tip_ramki_dlya;
    property M_opr_tip_fona_dlya: TBoldObjectReference read _Get_M_opr_tip_fona_dlya;
    property M_opr_tolsh_ramki_dlya: TBoldObjectReference read _Get_M_opr_tolsh_ramki_dlya;
    property Imya_tipa_ramki: String read _GetImya_tipa_ramki;
    property Imya_tipa_fona: String read _GetImya_tipa_fona;
    property Imya_tolsh_linii: String read _GetImya_tolsh_linii;
    property Ne_opredelena_ramka: Boolean read _GetNe_opredelena_ramka;
    property Tolshina_linii: double read _GetTolshina_linii;
    property Ukazatj_parametry_ramki: Boolean read _GetUkazatj_parametry_ramki write _SetUkazatj_parametry_ramki;
    property Shirina_ramki: double read _GetShirina_ramki write _SetShirina_ramki;
    property Dlina_ramki: double read _GetDlina_ramki write _SetDlina_ramki;
    property OtstupSverhu: double read _GetOtstupSverhu write _SetOtstupSverhu;
    property OtstupSnizu: double read _GetOtstupSnizu write _SetOtstupSnizu;
    property OtstupSprava: double read _GetOtstupSprava write _SetOtstupSprava;
    property OtstupSleva: double read _GetOtstupSleva write _SetOtstupSleva;
    property Interval_strochn: double read _GetInterval_strochn write _SetInterval_strochn;
    property opredelyaet_tip_ramki_dlya: TTip_ramki read _Getopredelyaet_tip_ramki_dlya write _Setopredelyaet_tip_ramki_dlya;
    property opr_tip_fona_dlya: TTip_fona read _Getopr_tip_fona_dlya write _Setopr_tip_fona_dlya;
    property opr_tolsh_ramki_dlya: TTolshina_linii read _Getopr_tolsh_ramki_dlya write _Setopr_tolsh_ramki_dlya;
  end;

  TShablon_razdela = class(TBusinessClassesRoot)
  private
    function _Get_M_Tip_razdelitelya: TBAString;
    function _GetTip_razdelitelya: String;
    procedure _SetTip_razdelitelya(const NewValue: String);
    function _GetIsp_dlya_razdeleniya: TTip_razdelitelya;
    function _Get_M_Isp_dlya_razdeleniya: TBoldObjectReference;
    procedure _SetIsp_dlya_razdeleniya(const value: TTip_razdelitelya);
  protected
  public
    property M_Tip_razdelitelya: TBAString read _Get_M_Tip_razdelitelya;
    property M_Isp_dlya_razdeleniya: TBoldObjectReference read _Get_M_Isp_dlya_razdeleniya;
    property Tip_razdelitelya: String read _GetTip_razdelitelya write _SetTip_razdelitelya;
    property Isp_dlya_razdeleniya: TTip_razdelitelya read _GetIsp_dlya_razdeleniya write _SetIsp_dlya_razdeleniya;
  end;

  TOrganizaciya = class(TPersona)
  private
    function _Get_M_Strana: TBAString;
    function _GetStrana: String;
    procedure _SetStrana(const NewValue: String);
    function _Get_M_Oblastj: TBAString;
    function _GetOblastj: String;
    procedure _SetOblastj(const NewValue: String);
    function _Get_M_Gorod: TBAString;
    function _GetGorod: String;
    procedure _SetGorod(const NewValue: String);
    function _Get_M_BIK: TBAString;
    function _GetBIK: String;
    procedure _SetBIK(const NewValue: String);
    function _Get_M_Naimenovanie: TBAString;
    function _GetNaimenovanie: String;
    procedure _SetNaimenovanie(const NewValue: String);
    function _Get_M_YavlyaetsyaVlad: TBABoolean;
    function _GetYavlyaetsyaVlad: Boolean;
    procedure _SetYavlyaetsyaVlad(const NewValue: Boolean);
    function _Get_M_Rukovoditelj: TBAString;
    function _GetRukovoditelj: String;
    procedure _SetRukovoditelj(const NewValue: String);
    function _Get_M_GlBuhgalter: TBAString;
    function _GetGlBuhgalter: String;
    procedure _SetGlBuhgalter(const NewValue: String);
    function _Get_M_INN: TBAString;
    function _GetINN: String;
    procedure _SetINN(const NewValue: String);
    function _Get_M_Rasch__schet: TBAString;
    function _GetRasch__schet: String;
    procedure _SetRasch__schet(const NewValue: String);
    function _Get_M_KPP: TBAString;
    function _GetKPP: String;
    procedure _SetKPP(const NewValue: String);
    function _Get_M_Tip_organizacii: TBAString;
    function _GetTip_organizacii: String;
    procedure _SetTip_organizacii(const NewValue: String);
    function _Get_M_Kor_schet: TBAString;
    function _GetKor_schet: String;
    procedure _SetKor_schet(const NewValue: String);
    function _Get_M_Naim__banka: TBAString;
    function _GetNaim__banka: String;
    procedure _SetNaim__banka(const NewValue: String);
  protected
  public
    property M_Strana: TBAString read _Get_M_Strana;
    property M_Oblastj: TBAString read _Get_M_Oblastj;
    property M_Gorod: TBAString read _Get_M_Gorod;
    property M_BIK: TBAString read _Get_M_BIK;
    property M_Naimenovanie: TBAString read _Get_M_Naimenovanie;
    property M_YavlyaetsyaVlad: TBABoolean read _Get_M_YavlyaetsyaVlad;
    property M_Rukovoditelj: TBAString read _Get_M_Rukovoditelj;
    property M_GlBuhgalter: TBAString read _Get_M_GlBuhgalter;
    property M_INN: TBAString read _Get_M_INN;
    property M_Rasch__schet: TBAString read _Get_M_Rasch__schet;
    property M_KPP: TBAString read _Get_M_KPP;
    property M_Tip_organizacii: TBAString read _Get_M_Tip_organizacii;
    property M_Kor_schet: TBAString read _Get_M_Kor_schet;
    property M_Naim__banka: TBAString read _Get_M_Naim__banka;
    property Strana: String read _GetStrana write _SetStrana;
    property Oblastj: String read _GetOblastj write _SetOblastj;
    property Gorod: String read _GetGorod write _SetGorod;
    property BIK: String read _GetBIK write _SetBIK;
    property Naimenovanie: String read _GetNaimenovanie write _SetNaimenovanie;
    property YavlyaetsyaVlad: Boolean read _GetYavlyaetsyaVlad write _SetYavlyaetsyaVlad;
    property Rukovoditelj: String read _GetRukovoditelj write _SetRukovoditelj;
    property GlBuhgalter: String read _GetGlBuhgalter write _SetGlBuhgalter;
    property INN: String read _GetINN write _SetINN;
    property Rasch__schet: String read _GetRasch__schet write _SetRasch__schet;
    property KPP: String read _GetKPP write _SetKPP;
    property Tip_organizacii: String read _GetTip_organizacii write _SetTip_organizacii;
    property Kor_schet: String read _GetKor_schet write _SetKor_schet;
    property Naim__banka: String read _GetNaim__banka write _SetNaim__banka;
  end;

  TGazeta = class(TSpravochnik)
  private
    function _Get_M_Iskatj_v_gazete: TBABoolean;
    function _GetIskatj_v_gazete: Boolean;
    procedure _SetIskatj_v_gazete(const NewValue: Boolean);
    function _Get_M_Posledn_vypusk_data: TBADate;
    function _GetPosledn_vypusk_data: TDate;
    function _Get_M_Tekushii_vyp_identifikator: TBAFloat;
    function _GetTekushii_vyp_identifikator: double;
    procedure _SetTekushii_vyp_identifikator(const NewValue: double);
    function _Get_M_Tekushii_vyp_data: TBADate;
    function _GetTekushii_vyp_data: TDate;
    function _Get_M_Poslednii_vyp_identifikator: TBAFloat;
    function _GetPoslednii_vyp_identifikator: double;
    function _Get_M_Nomer_posl_vypuska: TBAInteger;
    function _GetNomer_posl_vypuska: Integer;
    function _Get_M_Ident_pred_vypuska: TBAFloat;
    function _GetIdent_pred_vypuska: double;
    function _Get_M_Ustan_ident_pred_vypuska: TBAFloat;
    function _GetUstan_ident_pred_vypuska: double;
    procedure _SetUstan_ident_pred_vypuska(const NewValue: double);
    function _Get_M_Nomer_predposl_vypuska: TBAInteger;
    function _GetNomer_predposl_vypuska: Integer;
    function _Get_M_Filjtr_po_klientu: TBABoolean;
    function _GetFiljtr_po_klientu: Boolean;
    procedure _SetFiljtr_po_klientu(const NewValue: Boolean);
    function _Get_M_Filjtr_po_personalu: TBABoolean;
    function _GetFiljtr_po_personalu: Boolean;
    procedure _SetFiljtr_po_personalu(const NewValue: Boolean);
    function _Get_M_Iskatj_v_arhivnyh: TBABoolean;
    function _GetIskatj_v_arhivnyh: Boolean;
    procedure _SetIskatj_v_arhivnyh(const NewValue: Boolean);
    function _Get_M_Tek_vypusk_nomer: TBAInteger;
    function _GetTek_vypusk_nomer: Integer;
    function _Get_M_Tek_vypusk_god: TBAInteger;
    function _GetTek_vypusk_god: Integer;
    function _Get_M_Posl_vypusk_nomer: TBAInteger;
    function _GetPosl_vypusk_nomer: Integer;
    function _Get_M_Posl_vypusk_god: TBAInteger;
    function _GetPosl_vypusk_god: Integer;
    function _Get_M_Filjtr_po_dann_klienta: TBABoolean;
    function _GetFiljtr_po_dann_klienta: Boolean;
    procedure _SetFiljtr_po_dann_klienta(const NewValue: Boolean);
    function _Get_M_Marker: TBAString;
    function _GetMarker: String;
    procedure _SetMarker(const NewValue: String);
    function _Get_M_ProbelovDoMarkera: TBAInteger;
    function _GetProbelovDoMarkera: Integer;
    procedure _SetProbelovDoMarkera(const NewValue: Integer);
    function _Get_M_Probelov_PosleMarkera: TBAInteger;
    function _GetProbelov_PosleMarkera: Integer;
    procedure _SetProbelov_PosleMarkera(const NewValue: Integer);
    function _Get_M_Shirina_ramki: TBAFloat;
    function _GetShirina_ramki: double;
    procedure _SetShirina_ramki(const NewValue: double);
    function _Get_M_Dlina_ramki: TBAFloat;
    function _GetDlina_ramki: double;
    procedure _SetDlina_ramki(const NewValue: double);
    function _Get_M_OtstupSverhu: TBAFloat;
    function _GetOtstupSverhu: double;
    procedure _SetOtstupSverhu(const NewValue: double);
    function _Get_M_OtstupSnizu: TBAFloat;
    function _GetOtstupSnizu: double;
    procedure _SetOtstupSnizu(const NewValue: double);
    function _Get_M_OtstupSprava: TBAFloat;
    function _GetOtstupSprava: double;
    procedure _SetOtstupSprava(const NewValue: double);
    function _Get_M_OtstupSleva: TBAFloat;
    function _GetOtstupSleva: double;
    procedure _SetOtstupSleva(const NewValue: double);
    function _Get_M_Tolshina: TBAFloat;
    function _GetTolshina: double;
    procedure _SetTolshina(const NewValue: double);
    function _Get_M_Pokaz_objyavl_v_der: TBABoolean;
    function _GetPokaz_objyavl_v_der: Boolean;
    procedure _SetPokaz_objyavl_v_der(const NewValue: Boolean);
    function _Get_M_Sortirovatj_po_ubyvaniyu: TBABoolean;
    function _GetSortirovatj_po_ubyvaniyu: Boolean;
    procedure _SetSortirovatj_po_ubyvaniyu(const NewValue: Boolean);
    function _Get_M_Ukazatj__periodichnostj: TBABoolean;
    function _GetUkazatj__periodichnostj: Boolean;
    procedure _SetUkazatj__periodichnostj(const NewValue: Boolean);
    function _Get_M_Chislo_vyh_v_tek_godu: TBAInteger;
    function _GetChislo_vyh_v_tek_godu: Integer;
    function _Get_M_Period_vyh_v_dnyah: TBAInteger;
    function _GetPeriod_vyh_v_dnyah: Integer;
    procedure _SetPeriod_vyh_v_dnyah(const NewValue: Integer);
    function _Get_M_Denj_ned_vyhoda: TBAString;
    function _GetDenj_ned_vyhoda: String;
    procedure _SetDenj_ned_vyhoda(const NewValue: String);
    function _Get_M_Vyp_spisok_vypuskov: TBABoolean;
    function _GetVyp_spisok_vypuskov: Boolean;
    procedure _SetVyp_spisok_vypuskov(const NewValue: Boolean);
    function _Get_M_Ispoljz_pervye_nesk_simv: TBABoolean;
    function _GetIspoljz_pervye_nesk_simv: Boolean;
    procedure _SetIspoljz_pervye_nesk_simv(const NewValue: Boolean);
    function _Get_M_Ukaz_zakon_form_slova: TBABoolean;
    function _GetUkaz_zakon_form_slova: Boolean;
    procedure _SetUkaz_zakon_form_slova(const NewValue: Boolean);
    function _Get_M_Kolichestvo_simvolov: TBAInteger;
    function _GetKolichestvo_simvolov: Integer;
    procedure _SetKolichestvo_simvolov(const NewValue: Integer);
    function _Get_M_Zakon_form_slova: TBAString;
    function _GetZakon_form_slova: String;
    procedure _SetZakon_form_slova(const NewValue: String);
    function _Get_M_Nomera_vyh_grupp: TBAString;
    function _GetNomera_vyh_grupp: String;
    procedure _SetNomera_vyh_grupp(const NewValue: String);
    function _Get_M_Chislo_v_srochn_grupp: TBAInteger;
    function _GetChislo_v_srochn_grupp: Integer;
    procedure _SetChislo_v_srochn_grupp(const NewValue: Integer);
    function _Get_M_Sprash_dlya_kagdogo: TBABoolean;
    function _GetSprash_dlya_kagdogo: Boolean;
    procedure _SetSprash_dlya_kagdogo(const NewValue: Boolean);
    function _Get_M_Vstavl_mnogotochie: TBABoolean;
    function _GetVstavl_mnogotochie: Boolean;
    procedure _SetVstavl_mnogotochie(const NewValue: Boolean);
    function _Get_M_Isk_nom_v_primech_Word: TBABoolean;
    function _GetIsk_nom_v_primech_Word: Boolean;
    procedure _SetIsk_nom_v_primech_Word(const NewValue: Boolean);
    function _Get_M_Vstavl_toljk_tekst_Word: TBABoolean;
    function _GetVstavl_toljk_tekst_Word: Boolean;
    procedure _SetVstavl_toljk_tekst_Word(const NewValue: Boolean);
    function _Get_M_Ustan_prizn_nach_Word: TBABoolean;
    function _GetUstan_prizn_nach_Word: Boolean;
    procedure _SetUstan_prizn_nach_Word(const NewValue: Boolean);
    function _Get_M_Annonce_marker_Word: TBAString;
    function _GetAnnonce_marker_Word: String;
    procedure _SetAnnonce_marker_Word(const NewValue: String);
    function _Get_M_Request_at_no_params_Word: TBABoolean;
    function _GetRequest_at_no_params_Word: Boolean;
    procedure _SetRequest_at_no_params_Word(const NewValue: Boolean);
    function _Get_M_Def_group_curr_curr: TBABoolean;
    function _GetDef_group_curr_curr: Boolean;
    procedure _SetDef_group_curr_curr(const NewValue: Boolean);
    function _Get_M_Def_group_curr_unlimit: TBABoolean;
    function _GetDef_group_curr_unlimit: Boolean;
    procedure _SetDef_group_curr_unlimit(const NewValue: Boolean);
    function _Get_M_Pokaz_prikr_srochn_v_der: TBABoolean;
    function _GetPokaz_prikr_srochn_v_der: Boolean;
    procedure _SetPokaz_prikr_srochn_v_der(const NewValue: Boolean);
    function _Get_M_Chislo_objyavlenii: TBAInteger;
    function _GetChislo_objyavlenii: Integer;
    function _Get_M_Chislo_nekorrektn: TBAInteger;
    function _GetChislo_nekorrektn: Integer;
    function _Get_M_Kolich_nom_chistki: TBAInteger;
    function _GetKolich_nom_chistki: Integer;
    procedure _SetKolich_nom_chistki(const NewValue: Integer);
    function _Get_M_Ident_vyd_razd: TBAFloat;
    function _GetIdent_vyd_razd: double;
    procedure _SetIdent_vyd_razd(const NewValue: double);
    function _Get_M_Pokaz_cveta_klientov: TBABoolean;
    function _GetPokaz_cveta_klientov: Boolean;
    procedure _SetPokaz_cveta_klientov(const NewValue: Boolean);
    function _Getvklyuchaet_vypusk: TVypuskList;
    function _Getosush_poisk_po_klassu: TKlass_poiska;
    function _Get_M_osush_poisk_po_klassu: TBoldObjectReference;
    procedure _Setosush_poisk_po_klassu(const value: TKlass_poiska);
  protected
  public
    property M_Iskatj_v_gazete: TBABoolean read _Get_M_Iskatj_v_gazete;
    property M_Posledn_vypusk_data: TBADate read _Get_M_Posledn_vypusk_data;
    property M_Tekushii_vyp_identifikator: TBAFloat read _Get_M_Tekushii_vyp_identifikator;
    property M_Tekushii_vyp_data: TBADate read _Get_M_Tekushii_vyp_data;
    property M_Poslednii_vyp_identifikator: TBAFloat read _Get_M_Poslednii_vyp_identifikator;
    property M_Nomer_posl_vypuska: TBAInteger read _Get_M_Nomer_posl_vypuska;
    property M_Ident_pred_vypuska: TBAFloat read _Get_M_Ident_pred_vypuska;
    property M_Ustan_ident_pred_vypuska: TBAFloat read _Get_M_Ustan_ident_pred_vypuska;
    property M_Nomer_predposl_vypuska: TBAInteger read _Get_M_Nomer_predposl_vypuska;
    property M_Filjtr_po_klientu: TBABoolean read _Get_M_Filjtr_po_klientu;
    property M_Filjtr_po_personalu: TBABoolean read _Get_M_Filjtr_po_personalu;
    property M_Iskatj_v_arhivnyh: TBABoolean read _Get_M_Iskatj_v_arhivnyh;
    property M_Tek_vypusk_nomer: TBAInteger read _Get_M_Tek_vypusk_nomer;
    property M_Tek_vypusk_god: TBAInteger read _Get_M_Tek_vypusk_god;
    property M_Posl_vypusk_nomer: TBAInteger read _Get_M_Posl_vypusk_nomer;
    property M_Posl_vypusk_god: TBAInteger read _Get_M_Posl_vypusk_god;
    property M_Filjtr_po_dann_klienta: TBABoolean read _Get_M_Filjtr_po_dann_klienta;
    property M_Marker: TBAString read _Get_M_Marker;
    property M_ProbelovDoMarkera: TBAInteger read _Get_M_ProbelovDoMarkera;
    property M_Probelov_PosleMarkera: TBAInteger read _Get_M_Probelov_PosleMarkera;
    property M_Shirina_ramki: TBAFloat read _Get_M_Shirina_ramki;
    property M_Dlina_ramki: TBAFloat read _Get_M_Dlina_ramki;
    property M_OtstupSverhu: TBAFloat read _Get_M_OtstupSverhu;
    property M_OtstupSnizu: TBAFloat read _Get_M_OtstupSnizu;
    property M_OtstupSprava: TBAFloat read _Get_M_OtstupSprava;
    property M_OtstupSleva: TBAFloat read _Get_M_OtstupSleva;
    property M_Tolshina: TBAFloat read _Get_M_Tolshina;
    property M_Pokaz_objyavl_v_der: TBABoolean read _Get_M_Pokaz_objyavl_v_der;
    property M_Sortirovatj_po_ubyvaniyu: TBABoolean read _Get_M_Sortirovatj_po_ubyvaniyu;
    property M_Ukazatj__periodichnostj: TBABoolean read _Get_M_Ukazatj__periodichnostj;
    property M_Chislo_vyh_v_tek_godu: TBAInteger read _Get_M_Chislo_vyh_v_tek_godu;
    property M_Period_vyh_v_dnyah: TBAInteger read _Get_M_Period_vyh_v_dnyah;
    property M_Denj_ned_vyhoda: TBAString read _Get_M_Denj_ned_vyhoda;
    property M_Vyp_spisok_vypuskov: TBABoolean read _Get_M_Vyp_spisok_vypuskov;
    property M_Ispoljz_pervye_nesk_simv: TBABoolean read _Get_M_Ispoljz_pervye_nesk_simv;
    property M_Ukaz_zakon_form_slova: TBABoolean read _Get_M_Ukaz_zakon_form_slova;
    property M_Kolichestvo_simvolov: TBAInteger read _Get_M_Kolichestvo_simvolov;
    property M_Zakon_form_slova: TBAString read _Get_M_Zakon_form_slova;
    property M_Nomera_vyh_grupp: TBAString read _Get_M_Nomera_vyh_grupp;
    property M_Chislo_v_srochn_grupp: TBAInteger read _Get_M_Chislo_v_srochn_grupp;
    property M_Sprash_dlya_kagdogo: TBABoolean read _Get_M_Sprash_dlya_kagdogo;
    property M_Vstavl_mnogotochie: TBABoolean read _Get_M_Vstavl_mnogotochie;
    property M_Isk_nom_v_primech_Word: TBABoolean read _Get_M_Isk_nom_v_primech_Word;
    property M_Vstavl_toljk_tekst_Word: TBABoolean read _Get_M_Vstavl_toljk_tekst_Word;
    property M_Ustan_prizn_nach_Word: TBABoolean read _Get_M_Ustan_prizn_nach_Word;
    property M_Annonce_marker_Word: TBAString read _Get_M_Annonce_marker_Word;
    property M_Request_at_no_params_Word: TBABoolean read _Get_M_Request_at_no_params_Word;
    property M_Def_group_curr_curr: TBABoolean read _Get_M_Def_group_curr_curr;
    property M_Def_group_curr_unlimit: TBABoolean read _Get_M_Def_group_curr_unlimit;
    property M_Pokaz_prikr_srochn_v_der: TBABoolean read _Get_M_Pokaz_prikr_srochn_v_der;
    property M_Chislo_objyavlenii: TBAInteger read _Get_M_Chislo_objyavlenii;
    property M_Chislo_nekorrektn: TBAInteger read _Get_M_Chislo_nekorrektn;
    property M_Kolich_nom_chistki: TBAInteger read _Get_M_Kolich_nom_chistki;
    property M_Ident_vyd_razd: TBAFloat read _Get_M_Ident_vyd_razd;
    property M_Pokaz_cveta_klientov: TBABoolean read _Get_M_Pokaz_cveta_klientov;
    property M_vklyuchaet_vypusk: TVypuskList read _Getvklyuchaet_vypusk;
    property M_osush_poisk_po_klassu: TBoldObjectReference read _Get_M_osush_poisk_po_klassu;
    property Iskatj_v_gazete: Boolean read _GetIskatj_v_gazete write _SetIskatj_v_gazete;
    property Posledn_vypusk_data: TDate read _GetPosledn_vypusk_data;
    property Tekushii_vyp_identifikator: double read _GetTekushii_vyp_identifikator write _SetTekushii_vyp_identifikator;
    property Tekushii_vyp_data: TDate read _GetTekushii_vyp_data;
    property Poslednii_vyp_identifikator: double read _GetPoslednii_vyp_identifikator;
    property Nomer_posl_vypuska: Integer read _GetNomer_posl_vypuska;
    property Ident_pred_vypuska: double read _GetIdent_pred_vypuska;
    property Ustan_ident_pred_vypuska: double read _GetUstan_ident_pred_vypuska write _SetUstan_ident_pred_vypuska;
    property Nomer_predposl_vypuska: Integer read _GetNomer_predposl_vypuska;
    property Filjtr_po_klientu: Boolean read _GetFiljtr_po_klientu write _SetFiljtr_po_klientu;
    property Filjtr_po_personalu: Boolean read _GetFiljtr_po_personalu write _SetFiljtr_po_personalu;
    property Iskatj_v_arhivnyh: Boolean read _GetIskatj_v_arhivnyh write _SetIskatj_v_arhivnyh;
    property Tek_vypusk_nomer: Integer read _GetTek_vypusk_nomer;
    property Tek_vypusk_god: Integer read _GetTek_vypusk_god;
    property Posl_vypusk_nomer: Integer read _GetPosl_vypusk_nomer;
    property Posl_vypusk_god: Integer read _GetPosl_vypusk_god;
    property Filjtr_po_dann_klienta: Boolean read _GetFiljtr_po_dann_klienta write _SetFiljtr_po_dann_klienta;
    property Marker: String read _GetMarker write _SetMarker;
    property ProbelovDoMarkera: Integer read _GetProbelovDoMarkera write _SetProbelovDoMarkera;
    property Probelov_PosleMarkera: Integer read _GetProbelov_PosleMarkera write _SetProbelov_PosleMarkera;
    property Shirina_ramki: double read _GetShirina_ramki write _SetShirina_ramki;
    property Dlina_ramki: double read _GetDlina_ramki write _SetDlina_ramki;
    property OtstupSverhu: double read _GetOtstupSverhu write _SetOtstupSverhu;
    property OtstupSnizu: double read _GetOtstupSnizu write _SetOtstupSnizu;
    property OtstupSprava: double read _GetOtstupSprava write _SetOtstupSprava;
    property OtstupSleva: double read _GetOtstupSleva write _SetOtstupSleva;
    property Tolshina: double read _GetTolshina write _SetTolshina;
    property Pokaz_objyavl_v_der: Boolean read _GetPokaz_objyavl_v_der write _SetPokaz_objyavl_v_der;
    property Sortirovatj_po_ubyvaniyu: Boolean read _GetSortirovatj_po_ubyvaniyu write _SetSortirovatj_po_ubyvaniyu;
    property Ukazatj__periodichnostj: Boolean read _GetUkazatj__periodichnostj write _SetUkazatj__periodichnostj;
    property Chislo_vyh_v_tek_godu: Integer read _GetChislo_vyh_v_tek_godu;
    property Period_vyh_v_dnyah: Integer read _GetPeriod_vyh_v_dnyah write _SetPeriod_vyh_v_dnyah;
    property Denj_ned_vyhoda: String read _GetDenj_ned_vyhoda write _SetDenj_ned_vyhoda;
    property Vyp_spisok_vypuskov: Boolean read _GetVyp_spisok_vypuskov write _SetVyp_spisok_vypuskov;
    property Ispoljz_pervye_nesk_simv: Boolean read _GetIspoljz_pervye_nesk_simv write _SetIspoljz_pervye_nesk_simv;
    property Ukaz_zakon_form_slova: Boolean read _GetUkaz_zakon_form_slova write _SetUkaz_zakon_form_slova;
    property Kolichestvo_simvolov: Integer read _GetKolichestvo_simvolov write _SetKolichestvo_simvolov;
    property Zakon_form_slova: String read _GetZakon_form_slova write _SetZakon_form_slova;
    property Nomera_vyh_grupp: String read _GetNomera_vyh_grupp write _SetNomera_vyh_grupp;
    property Chislo_v_srochn_grupp: Integer read _GetChislo_v_srochn_grupp write _SetChislo_v_srochn_grupp;
    property Sprash_dlya_kagdogo: Boolean read _GetSprash_dlya_kagdogo write _SetSprash_dlya_kagdogo;
    property Vstavl_mnogotochie: Boolean read _GetVstavl_mnogotochie write _SetVstavl_mnogotochie;
    property Isk_nom_v_primech_Word: Boolean read _GetIsk_nom_v_primech_Word write _SetIsk_nom_v_primech_Word;
    property Vstavl_toljk_tekst_Word: Boolean read _GetVstavl_toljk_tekst_Word write _SetVstavl_toljk_tekst_Word;
    property Ustan_prizn_nach_Word: Boolean read _GetUstan_prizn_nach_Word write _SetUstan_prizn_nach_Word;
    property Annonce_marker_Word: String read _GetAnnonce_marker_Word write _SetAnnonce_marker_Word;
    property Request_at_no_params_Word: Boolean read _GetRequest_at_no_params_Word write _SetRequest_at_no_params_Word;
    property Def_group_curr_curr: Boolean read _GetDef_group_curr_curr write _SetDef_group_curr_curr;
    property Def_group_curr_unlimit: Boolean read _GetDef_group_curr_unlimit write _SetDef_group_curr_unlimit;
    property Pokaz_prikr_srochn_v_der: Boolean read _GetPokaz_prikr_srochn_v_der write _SetPokaz_prikr_srochn_v_der;
    property Chislo_objyavlenii: Integer read _GetChislo_objyavlenii;
    property Chislo_nekorrektn: Integer read _GetChislo_nekorrektn;
    property Kolich_nom_chistki: Integer read _GetKolich_nom_chistki write _SetKolich_nom_chistki;
    property Ident_vyd_razd: double read _GetIdent_vyd_razd write _SetIdent_vyd_razd;
    property Pokaz_cveta_klientov: Boolean read _GetPokaz_cveta_klientov write _SetPokaz_cveta_klientov;
    property vklyuchaet_vypusk: TVypuskList read _Getvklyuchaet_vypusk;
    property osush_poisk_po_klassu: TKlass_poiska read _Getosush_poisk_po_klassu write _Setosush_poisk_po_klassu;
  end;

  TGruppa_vypuskov = class(TSpravochnik)
  private
    function _Getvhodit_v_gruppu_vyp: TVypuskList;
  protected
  public
    property M_vhodit_v_gruppu_vyp: TVypuskList read _Getvhodit_v_gruppu_vyp;
    property vhodit_v_gruppu_vyp: TVypuskList read _Getvhodit_v_gruppu_vyp;
  end;

  TKlyuchi_vklyuch__objyavlenii = class(TSpravochnik)
  private
    function _GetOdin_iz_klyuchei_dlya_spiska: TRazdel;
    function _Get_M_Odin_iz_klyuchei_dlya_spiska: TBoldObjectReference;
    procedure _SetOdin_iz_klyuchei_dlya_spiska(const value: TRazdel);
    function _Getvhodit_v_spravochnik: TRazdel_spravochnika;
    function _Get_M_vhodit_v_spravochnik: TBoldObjectReference;
    procedure _Setvhodit_v_spravochnik(const value: TRazdel_spravochnika);
  protected
  public
    property M_Odin_iz_klyuchei_dlya_spiska: TBoldObjectReference read _Get_M_Odin_iz_klyuchei_dlya_spiska;
    property M_vhodit_v_spravochnik: TBoldObjectReference read _Get_M_vhodit_v_spravochnik;
    property Odin_iz_klyuchei_dlya_spiska: TRazdel read _GetOdin_iz_klyuchei_dlya_spiska write _SetOdin_iz_klyuchei_dlya_spiska;
    property vhodit_v_spravochnik: TRazdel_spravochnika read _Getvhodit_v_spravochnik write _Setvhodit_v_spravochnik;
  end;

  TKupon = class(TSpravochnik)
  private
    function _Get_M_Kod_formy: TBAInteger;
    function _GetKod_formy: Integer;
    procedure _SetKod_formy(const NewValue: Integer);
    function _Get_M_PriznProdayu: TBABoolean;
    function _GetPriznProdayu: Boolean;
    procedure _SetPriznProdayu(const NewValue: Boolean);
    function _Get_M_PrizeKuplyu: TBABoolean;
    function _GetPrizeKuplyu: Boolean;
    procedure _SetPrizeKuplyu(const NewValue: Boolean);
    function _Get_M_PriznMenyayu: TBABoolean;
    function _GetPriznMenyayu: Boolean;
    procedure _SetPriznMenyayu(const NewValue: Boolean);
    function _Get_M_PriznSdayu: TBABoolean;
    function _GetPriznSdayu: Boolean;
    procedure _SetPriznSdayu(const NewValue: Boolean);
    function _Get_M_PriznSnimu: TBABoolean;
    function _GetPriznSnimu: Boolean;
    procedure _SetPriznSnimu(const NewValue: Boolean);
    function _Get_M_PriznVypolnyu: TBABoolean;
    function _GetPriznVypolnyu: Boolean;
    procedure _SetPriznVypolnyu(const NewValue: Boolean);
    function _Get_M_PriznSoglasen: TBABoolean;
    function _GetPriznSoglasen: Boolean;
    procedure _SetPriznSoglasen(const NewValue: Boolean);
    function _Get_M_Nom_perv_stand_prizn: TBAInteger;
    function _GetNom_perv_stand_prizn: Integer;
    function _Getisp_dlya_dob_v_razdel: TRazdelList;
    function _Getispoljz_prizn_dobavleniya: TPriznak_razdelaList;
    function _GetLinksostavlyaet_harakterispoljz_prizn_dobavleniya: TLinksostavlyaet_harakterispoljz_prizn_dobavleniyaList;
  protected
  public
    property M_Kod_formy: TBAInteger read _Get_M_Kod_formy;
    property M_PriznProdayu: TBABoolean read _Get_M_PriznProdayu;
    property M_PrizeKuplyu: TBABoolean read _Get_M_PrizeKuplyu;
    property M_PriznMenyayu: TBABoolean read _Get_M_PriznMenyayu;
    property M_PriznSdayu: TBABoolean read _Get_M_PriznSdayu;
    property M_PriznSnimu: TBABoolean read _Get_M_PriznSnimu;
    property M_PriznVypolnyu: TBABoolean read _Get_M_PriznVypolnyu;
    property M_PriznSoglasen: TBABoolean read _Get_M_PriznSoglasen;
    property M_Nom_perv_stand_prizn: TBAInteger read _Get_M_Nom_perv_stand_prizn;
    property M_isp_dlya_dob_v_razdel: TRazdelList read _Getisp_dlya_dob_v_razdel;
    property M_ispoljz_prizn_dobavleniya: TPriznak_razdelaList read _Getispoljz_prizn_dobavleniya;
    property M_Linksostavlyaet_harakterispoljz_prizn_dobavleniya: TLinksostavlyaet_harakterispoljz_prizn_dobavleniyaList read _GetLinksostavlyaet_harakterispoljz_prizn_dobavleniya;
    property Kod_formy: Integer read _GetKod_formy write _SetKod_formy;
    property PriznProdayu: Boolean read _GetPriznProdayu write _SetPriznProdayu;
    property PrizeKuplyu: Boolean read _GetPrizeKuplyu write _SetPrizeKuplyu;
    property PriznMenyayu: Boolean read _GetPriznMenyayu write _SetPriznMenyayu;
    property PriznSdayu: Boolean read _GetPriznSdayu write _SetPriznSdayu;
    property PriznSnimu: Boolean read _GetPriznSnimu write _SetPriznSnimu;
    property PriznVypolnyu: Boolean read _GetPriznVypolnyu write _SetPriznVypolnyu;
    property PriznSoglasen: Boolean read _GetPriznSoglasen write _SetPriznSoglasen;
    property Nom_perv_stand_prizn: Integer read _GetNom_perv_stand_prizn;
    property isp_dlya_dob_v_razdel: TRazdelList read _Getisp_dlya_dob_v_razdel;
    property ispoljz_prizn_dobavleniya: TPriznak_razdelaList read _Getispoljz_prizn_dobavleniya;
    property Linksostavlyaet_harakterispoljz_prizn_dobavleniya: TLinksostavlyaet_harakterispoljz_prizn_dobavleniyaList read _GetLinksostavlyaet_harakterispoljz_prizn_dobavleniya;
  end;

  TPriznak_razdela = class(TSpravochnik)
  private
    function _Get_M_Kod_priznaka: TBAInteger;
    function _GetKod_priznaka: Integer;
    procedure _SetKod_priznaka(const NewValue: Integer);
    function _Getyavl_priznakom_dlya: TRazdelList;
    function _Getsostavlyaet_harakter: TKuponList;
    function _GetLinksostavlyaet_harakterispoljz_prizn_dobavleniya: TLinksostavlyaet_harakterispoljz_prizn_dobavleniyaList;
  protected
  public
    property M_Kod_priznaka: TBAInteger read _Get_M_Kod_priznaka;
    property M_yavl_priznakom_dlya: TRazdelList read _Getyavl_priznakom_dlya;
    property M_sostavlyaet_harakter: TKuponList read _Getsostavlyaet_harakter;
    property M_Linksostavlyaet_harakterispoljz_prizn_dobavleniya: TLinksostavlyaet_harakterispoljz_prizn_dobavleniyaList read _GetLinksostavlyaet_harakterispoljz_prizn_dobavleniya;
    property Kod_priznaka: Integer read _GetKod_priznaka write _SetKod_priznaka;
    property yavl_priznakom_dlya: TRazdelList read _Getyavl_priznakom_dlya;
    property sostavlyaet_harakter: TKuponList read _Getsostavlyaet_harakter;
    property Linksostavlyaet_harakterispoljz_prizn_dobavleniya: TLinksostavlyaet_harakterispoljz_prizn_dobavleniyaList read _GetLinksostavlyaet_harakterispoljz_prizn_dobavleniya;
  end;

  TRazdel_spravochnika = class(TSpravochnik)
  private
    function _Getsodergit_perechenj_klyuchei: TKlyuchi_vklyuch__objyavleniiList;
  protected
  public
    property M_sodergit_perechenj_klyuchei: TKlyuchi_vklyuch__objyavleniiList read _Getsodergit_perechenj_klyuchei;
    property sodergit_perechenj_klyuchei: TKlyuchi_vklyuch__objyavleniiList read _Getsodergit_perechenj_klyuchei;
  end;

  TTip_vypuska = class(TSpravochnik)
  private
  protected
  public
  end;

  TTip_razdelitelya = class(TSpravochnik)
  private
    function _Get_M_Razdelitelj: TBAInteger;
    function _GetRazdelitelj: Integer;
    procedure _SetRazdelitelj(const NewValue: Integer);
    function _Get_M_Risunok: TBABlob;
    function _GetRisunok: String;
    procedure _SetRisunok(const NewValue: String);
    function _GetOpis_razdelenie_v: TShablon_razdelaList;
  protected
  public
    property M_Razdelitelj: TBAInteger read _Get_M_Razdelitelj;
    property M_Risunok: TBABlob read _Get_M_Risunok;
    property M_Opis_razdelenie_v: TShablon_razdelaList read _GetOpis_razdelenie_v;
    property Razdelitelj: Integer read _GetRazdelitelj write _SetRazdelitelj;
    property Risunok: String read _GetRisunok write _SetRisunok;
    property Opis_razdelenie_v: TShablon_razdelaList read _GetOpis_razdelenie_v;
  end;

  TTip_ramki = class(TSpravochnik)
  private
    function _Get_M_Identifikator_WORD: TBAInteger;
    function _GetIdentifikator_WORD: Integer;
    procedure _SetIdentifikator_WORD(const NewValue: Integer);
    function _Getimeet_tip_ramki: TShablon_objyavleniyaList;
  protected
  public
    property M_Identifikator_WORD: TBAInteger read _Get_M_Identifikator_WORD;
    property M_imeet_tip_ramki: TShablon_objyavleniyaList read _Getimeet_tip_ramki;
    property Identifikator_WORD: Integer read _GetIdentifikator_WORD write _SetIdentifikator_WORD;
    property imeet_tip_ramki: TShablon_objyavleniyaList read _Getimeet_tip_ramki;
  end;

  TTip_fona = class(TSpravochnik)
  private
    function _Getimeet_tip_fona: TShablon_objyavleniyaList;
  protected
  public
    property M_imeet_tip_fona: TShablon_objyavleniyaList read _Getimeet_tip_fona;
    property imeet_tip_fona: TShablon_objyavleniyaList read _Getimeet_tip_fona;
  end;

  TTolshina_linii = class(TSpravochnik)
  private
    function _Get_M_Tolshina: TBAFloat;
    function _GetTolshina: double;
    procedure _SetTolshina(const NewValue: double);
    function _Getimeet_tolsh_ramki: TShablon_objyavleniyaList;
  protected
  public
    property M_Tolshina: TBAFloat read _Get_M_Tolshina;
    property M_imeet_tolsh_ramki: TShablon_objyavleniyaList read _Getimeet_tolsh_ramki;
    property Tolshina: double read _GetTolshina write _SetTolshina;
    property imeet_tolsh_ramki: TShablon_objyavleniyaList read _Getimeet_tolsh_ramki;
  end;

  TObjyavlenie = class(TShablon_objyavleniya)
  private
    function _Get_M_WordBlob: TBATypedBlob;
    function _GetWordBlob: String;
    procedure _SetWordBlob(const NewValue: String);
    function _Get_M_Data_dobavleniya: TBADate;
    function _GetData_dobavleniya: TDate;
    procedure _SetData_dobavleniya(const NewValue: TDate);
    function _Get_M_Data_modifikacii: TBADate;
    function _GetData_modifikacii: TDate;
    procedure _SetData_modifikacii(const NewValue: TDate);
    function _Get_M_Cvetovoe_oboznachenie: TBAString;
    function _GetCvetovoe_oboznachenie: String;
    procedure _SetCvetovoe_oboznachenie(const NewValue: String);
    function _Get_M_YavlArhivnym: TBABoolean;
    function _GetYavlArhivnym: Boolean;
    function _Get_M_Otkorrektirovan: TBABoolean;
    function _GetOtkorrektirovan: Boolean;
    procedure _SetOtkorrektirovan(const NewValue: Boolean);
    function _Get_M_VyhVPechTekushii: TBABoolean;
    function _GetVyhVPechTekushii: Boolean;
    function _Get_M_Klyuch_slovo: TBAString;
    function _GetKlyuch_slovo: String;
    procedure _SetKlyuch_slovo(const NewValue: String);
    function _Get_M_Sortirovatj_po_tekstu: TBABoolean;
    function _GetSortirovatj_po_tekstu: Boolean;
    procedure _SetSortirovatj_po_tekstu(const NewValue: Boolean);
    function _Get_M_Cvet_stroki: TBAInteger;
    function _GetCvet_stroki: Integer;
    procedure _SetCvet_stroki(const NewValue: Integer);
    function _Get_M_Klient_yavl_organiz: TBABoolean;
    function _GetKlient_yavl_organiz: Boolean;
    procedure _SetKlient_yavl_organiz(const NewValue: Boolean);
    function _Get_M_Chislo_vyp_posle_vklyuch: TBAInteger;
    function _GetChislo_vyp_posle_vklyuch: Integer;
    function _Get_M_Identifikator_objyavleniya: TBAFloat;
    function _GetIdentifikator_objyavleniya: double;
    procedure _SetIdentifikator_objyavleniya(const NewValue: double);
    function _Get_M_Data_vypuska_perv_vyhoda: TBADate;
    function _GetData_vypuska_perv_vyhoda: TDate;
    function _Get_M_VyhVPechEshyo: TBABoolean;
    function _GetVyhVPechEshyo: Boolean;
    function _Get_M_Data_tek_vyp: TBADate;
    function _GetData_tek_vyp: TDate;
    function _Get_M_Data_posl_vyp: TBADate;
    function _GetData_posl_vyp: TDate;
    function _Get_M_Ident_posl_vyp: TBAFloat;
    function _GetIdent_posl_vyp: double;
    function _Get_M_Ident_tek_vyp: TBAFloat;
    function _GetIdent_tek_vyp: double;
    function _Get_M_Identifikator_gaz: TBAInteger;
    function _GetIdentifikator_gaz: Integer;
    function _Get_M_Identifikator_razdela: TBAFloat;
    function _GetIdentifikator_razdela: double;
    function _Get_M_Tekst_objyavleniya: TBAString;
    function _GetTekst_objyavleniya: String;
    procedure _SetTekst_objyavleniya(const NewValue: String);
    function _Get_M_Vhodit_v_kak_lib_razdel: TBABoolean;
    function _GetVhodit_v_kak_lib_razdel: Boolean;
    function _Get_M_Tek_vypusk_nomer: TBAInteger;
    function _GetTek_vypusk_nomer: Integer;
    function _Get_M_Tek_vypusk_god: TBAInteger;
    function _GetTek_vypusk_god: Integer;
    function _Get_M_Posl_vypusk_nomer: TBAInteger;
    function _GetPosl_vypusk_nomer: Integer;
    function _Get_M_Posl_vypusk_god: TBAInteger;
    function _GetPosl_vypusk_god: Integer;
    function _Get_M_Ukazatj_nomera: TBABoolean;
    function _GetUkazatj_nomera: Boolean;
    procedure _SetUkazatj_nomera(const NewValue: Boolean);
    function _Get_M_Vyh_po_ukaz_nomeram_v_tek: TBABoolean;
    function _GetVyh_po_ukaz_nomeram_v_tek: Boolean;
    function _Get_M_Vydel_girn_klyuch: TBABoolean;
    function _GetVydel_girn_klyuch: Boolean;
    procedure _SetVydel_girn_klyuch(const NewValue: Boolean);
    function _Get_M_Podskazka_o_vyhode_po_nomeram: TBAString;
    function _GetPodskazka_o_vyhode_po_nomeram: String;
    function _Get_M_Koncovka: TBAString;
    function _GetKoncovka: String;
    function _Get_M_Kolichestvo_v_srochnom: TBAInteger;
    function _GetKolichestvo_v_srochnom: Integer;
    procedure _SetKolichestvo_v_srochnom(const NewValue: Integer);
    function _Get_M_Nach_nomer: TBAInteger;
    function _GetNach_nomer: Integer;
    procedure _SetNach_nomer(const NewValue: Integer);
    function _Get_M_Konechn_nomer: TBAInteger;
    function _GetKonechn_nomer: Integer;
    procedure _SetKonechn_nomer(const NewValue: Integer);
    function _Get_M_Nach_god: TBAInteger;
    function _GetNach_god: Integer;
    procedure _SetNach_god(const NewValue: Integer);
    function _Get_M_Konechn_god: TBAInteger;
    function _GetKonechn_god: Integer;
    procedure _SetKonechn_god(const NewValue: Integer);
    function _Get_M_Vyh_po_ukaz_nomeram_v_posl: TBABoolean;
    function _GetVyh_po_ukaz_nomeram_v_posl: Boolean;
    function _Get_M_Vyh_po_ukaz_nomeram_eshyo: TBABoolean;
    function _GetVyh_po_ukaz_nomeram_eshyo: Boolean;
    function _Get_M_Podskazka_o_vyhode_polnaya: TBAString;
    function _GetPodskazka_o_vyhode_polnaya: String;
    function _Get_M_Adres: TBAString;
    function _GetAdres: String;
    function _Get_M_Telefony: TBAString;
    function _GetTelefony: String;
    function _Get_M_Vyh_po_otd_nomer_tek: TBABoolean;
    function _GetVyh_po_otd_nomer_tek: Boolean;
    function _Get_M_Ukaz_otd_nomera: TBABoolean;
    function _GetUkaz_otd_nomera: Boolean;
    procedure _SetUkaz_otd_nomera(const NewValue: Boolean);
    function _Get_M_Vyh_po_otd_nomer_eshyo: TBABoolean;
    function _GetVyh_po_otd_nomer_eshyo: Boolean;
    function _Get_M_Chislo_vyh_po_ukaz_nomeram: TBAInteger;
    function _GetChislo_vyh_po_ukaz_nomeram: Integer;
    function _Get_M_Nomer_pervogo_vypuska: TBAInteger;
    function _GetNomer_pervogo_vypuska: Integer;
    function _Get_M_God_pervogo_vypuska: TBAInteger;
    function _GetGod_pervogo_vypuska: Integer;
    function _Get_M_VyhVPechPosl: TBABoolean;
    function _GetVyhVPechPosl: Boolean;
    function _Get_M_TekVypDoBlig: TBABoolean;
    function _GetTekVypDoBlig: Boolean;
    function _Get_M_Vyh_po_otdeljn_nomeram_posl: TBABoolean;
    function _GetVyh_po_otdeljn_nomeram_posl: Boolean;
    function _Get_M_Obnovl_tekst_soderg: TBABoolean;
    function _GetObnovl_tekst_soderg: Boolean;
    procedure _SetObnovl_tekst_soderg(const NewValue: Boolean);
    function _Get_M_Istoriya_smeny_periodov: TBAString;
    function _GetIstoriya_smeny_periodov: String;
    procedure _SetIstoriya_smeny_periodov(const NewValue: String);
    function _Get_M_Otmenyaemyi_nomer: TBAInteger;
    function _GetOtmenyaemyi_nomer: Integer;
    procedure _SetOtmenyaemyi_nomer(const NewValue: Integer);
    function _Get_M_Kolichestvo_otd_nom_vyhoda: TBAInteger;
    function _GetKolichestvo_otd_nom_vyhoda: Integer;
    function _Get_M_Kol_nom_vyh_v_intervale: TBAInteger;
    function _GetKol_nom_vyh_v_intervale: Integer;
    function _Get_M_Vsego_nom_vyhoda: TBAInteger;
    function _GetVsego_nom_vyhoda: Integer;
    function _Get_M_Srochn_boljsh_chem_vyh: TBABoolean;
    function _GetSrochn_boljsh_chem_vyh: Boolean;
    function _Get_M_Konechn_vyh_beskon: TBABoolean;
    function _GetKonechn_vyh_beskon: Boolean;
    procedure _SetKonechn_vyh_beskon(const NewValue: Boolean);
    function _Get_M_Vyhodit_iz_srochn_v_tekushem: TBABoolean;
    function _GetVyhodit_iz_srochn_v_tekushem: Boolean;
    function _Get_M_Min_god_v_otd: TBAInteger;
    function _GetMin_god_v_otd: Integer;
    function _Get_M_Min_nom_v_otd: TBAInteger;
    function _GetMin_nom_v_otd: Integer;
    function _Get_M_Shapka_srochn_razdela: TBAString;
    function _GetShapka_srochn_razdela: String;
    function _Get_M_Vyh_v_srochn_v_tek_vyp: TBABoolean;
    function _GetVyh_v_srochn_v_tek_vyp: Boolean;
    function _Get_M_Primechanie: TBAString;
    function _GetPrimechanie: String;
    procedure _SetPrimechanie(const NewValue: String);
    function _Get_M_VBaze: TBABoolean;
    function _GetVBaze: Boolean;
    procedure _SetVBaze(const NewValue: Boolean);
    function _Get_M_Slovo_sortirovki: TBAString;
    function _GetSlovo_sortirovki: String;
    function _Get_M_Vyh_po_ukaz_nom_tek_eshyo: TBABoolean;
    function _GetVyh_po_ukaz_nom_tek_eshyo: Boolean;
    function _Get_M_Vyhod_po_otd_nom_tek_eshyo: TBABoolean;
    function _GetVyhod_po_otd_nom_tek_eshyo: Boolean;
    function _Get_M_Vyh_v_pech_tek_eshyo: TBABoolean;
    function _GetVyh_v_pech_tek_eshyo: Boolean;
    function _Get_M_Vhod_v_vydelennyi: TBABoolean;
    function _GetVhod_v_vydelennyi: Boolean;
    function _Get_M_V_tege_girnosti: TBABoolean;
    function _GetV_tege_girnosti: Boolean;
    procedure _SetV_tege_girnosti(const NewValue: Boolean);
    function _Get_M_Chislo_vyh_posle_vklyuch_srochn: TBAInteger;
    function _GetChislo_vyh_posle_vklyuch_srochn: Integer;
    function _Get_M_Chislo_vyh_posle_vklyuch_tekush: TBAInteger;
    function _GetChislo_vyh_posle_vklyuch_tekush: Integer;
    function _Get_M_Ispoljz_sobstv_teg: TBABoolean;
    function _GetIspoljz_sobstv_teg: Boolean;
    procedure _SetIspoljz_sobstv_teg(const NewValue: Boolean);
    function _Get_M_Sobstv_teg: TBAString;
    function _GetSobstv_teg: String;
    procedure _SetSobstv_teg(const NewValue: String);
    function _Get_M_Teg: TBAString;
    function _GetTeg: String;
    function _Getvhodit_v_razdel: TRazdel;
    function _Get_M_vhodit_v_razdel: TBoldObjectReference;
    procedure _Setvhodit_v_razdel(const value: TRazdel);
    function _Getobrabatyvaetsya_sotrudnikom: TPersonal;
    function _Get_M_obrabatyvaetsya_sotrudnikom: TBoldObjectReference;
    procedure _Setobrabatyvaetsya_sotrudnikom(const value: TPersonal);
    function _Getotnositsya_k_klientu: TKlient;
    function _Get_M_otnositsya_k_klientu: TBoldObjectReference;
    procedure _Setotnositsya_k_klientu(const value: TKlient);
    function _Getobyaz_vyhodit_v: TVyvoditj_v_datuList;
    function _Getvyh_po_otdeljn_nomeram: TNomer_vyhodaList;
  protected
  public
    property M_WordBlob: TBATypedBlob read _Get_M_WordBlob;
    property M_Data_dobavleniya: TBADate read _Get_M_Data_dobavleniya;
    property M_Data_modifikacii: TBADate read _Get_M_Data_modifikacii;
    property M_Cvetovoe_oboznachenie: TBAString read _Get_M_Cvetovoe_oboznachenie;
    property M_YavlArhivnym: TBABoolean read _Get_M_YavlArhivnym;
    property M_Otkorrektirovan: TBABoolean read _Get_M_Otkorrektirovan;
    property M_VyhVPechTekushii: TBABoolean read _Get_M_VyhVPechTekushii;
    property M_Klyuch_slovo: TBAString read _Get_M_Klyuch_slovo;
    property M_Sortirovatj_po_tekstu: TBABoolean read _Get_M_Sortirovatj_po_tekstu;
    property M_Cvet_stroki: TBAInteger read _Get_M_Cvet_stroki;
    property M_Klient_yavl_organiz: TBABoolean read _Get_M_Klient_yavl_organiz;
    property M_Chislo_vyp_posle_vklyuch: TBAInteger read _Get_M_Chislo_vyp_posle_vklyuch;
    property M_Identifikator_objyavleniya: TBAFloat read _Get_M_Identifikator_objyavleniya;
    property M_Data_vypuska_perv_vyhoda: TBADate read _Get_M_Data_vypuska_perv_vyhoda;
    property M_VyhVPechEshyo: TBABoolean read _Get_M_VyhVPechEshyo;
    property M_Data_tek_vyp: TBADate read _Get_M_Data_tek_vyp;
    property M_Data_posl_vyp: TBADate read _Get_M_Data_posl_vyp;
    property M_Ident_posl_vyp: TBAFloat read _Get_M_Ident_posl_vyp;
    property M_Ident_tek_vyp: TBAFloat read _Get_M_Ident_tek_vyp;
    property M_Identifikator_gaz: TBAInteger read _Get_M_Identifikator_gaz;
    property M_Identifikator_razdela: TBAFloat read _Get_M_Identifikator_razdela;
    property M_Tekst_objyavleniya: TBAString read _Get_M_Tekst_objyavleniya;
    property M_Vhodit_v_kak_lib_razdel: TBABoolean read _Get_M_Vhodit_v_kak_lib_razdel;
    property M_Tek_vypusk_nomer: TBAInteger read _Get_M_Tek_vypusk_nomer;
    property M_Tek_vypusk_god: TBAInteger read _Get_M_Tek_vypusk_god;
    property M_Posl_vypusk_nomer: TBAInteger read _Get_M_Posl_vypusk_nomer;
    property M_Posl_vypusk_god: TBAInteger read _Get_M_Posl_vypusk_god;
    property M_Ukazatj_nomera: TBABoolean read _Get_M_Ukazatj_nomera;
    property M_Vyh_po_ukaz_nomeram_v_tek: TBABoolean read _Get_M_Vyh_po_ukaz_nomeram_v_tek;
    property M_Vydel_girn_klyuch: TBABoolean read _Get_M_Vydel_girn_klyuch;
    property M_Podskazka_o_vyhode_po_nomeram: TBAString read _Get_M_Podskazka_o_vyhode_po_nomeram;
    property M_Koncovka: TBAString read _Get_M_Koncovka;
    property M_Kolichestvo_v_srochnom: TBAInteger read _Get_M_Kolichestvo_v_srochnom;
    property M_Nach_nomer: TBAInteger read _Get_M_Nach_nomer;
    property M_Konechn_nomer: TBAInteger read _Get_M_Konechn_nomer;
    property M_Nach_god: TBAInteger read _Get_M_Nach_god;
    property M_Konechn_god: TBAInteger read _Get_M_Konechn_god;
    property M_Vyh_po_ukaz_nomeram_v_posl: TBABoolean read _Get_M_Vyh_po_ukaz_nomeram_v_posl;
    property M_Vyh_po_ukaz_nomeram_eshyo: TBABoolean read _Get_M_Vyh_po_ukaz_nomeram_eshyo;
    property M_Podskazka_o_vyhode_polnaya: TBAString read _Get_M_Podskazka_o_vyhode_polnaya;
    property M_Adres: TBAString read _Get_M_Adres;
    property M_Telefony: TBAString read _Get_M_Telefony;
    property M_Vyh_po_otd_nomer_tek: TBABoolean read _Get_M_Vyh_po_otd_nomer_tek;
    property M_Ukaz_otd_nomera: TBABoolean read _Get_M_Ukaz_otd_nomera;
    property M_Vyh_po_otd_nomer_eshyo: TBABoolean read _Get_M_Vyh_po_otd_nomer_eshyo;
    property M_Chislo_vyh_po_ukaz_nomeram: TBAInteger read _Get_M_Chislo_vyh_po_ukaz_nomeram;
    property M_Nomer_pervogo_vypuska: TBAInteger read _Get_M_Nomer_pervogo_vypuska;
    property M_God_pervogo_vypuska: TBAInteger read _Get_M_God_pervogo_vypuska;
    property M_VyhVPechPosl: TBABoolean read _Get_M_VyhVPechPosl;
    property M_TekVypDoBlig: TBABoolean read _Get_M_TekVypDoBlig;
    property M_Vyh_po_otdeljn_nomeram_posl: TBABoolean read _Get_M_Vyh_po_otdeljn_nomeram_posl;
    property M_Obnovl_tekst_soderg: TBABoolean read _Get_M_Obnovl_tekst_soderg;
    property M_Istoriya_smeny_periodov: TBAString read _Get_M_Istoriya_smeny_periodov;
    property M_Otmenyaemyi_nomer: TBAInteger read _Get_M_Otmenyaemyi_nomer;
    property M_Kolichestvo_otd_nom_vyhoda: TBAInteger read _Get_M_Kolichestvo_otd_nom_vyhoda;
    property M_Kol_nom_vyh_v_intervale: TBAInteger read _Get_M_Kol_nom_vyh_v_intervale;
    property M_Vsego_nom_vyhoda: TBAInteger read _Get_M_Vsego_nom_vyhoda;
    property M_Srochn_boljsh_chem_vyh: TBABoolean read _Get_M_Srochn_boljsh_chem_vyh;
    property M_Konechn_vyh_beskon: TBABoolean read _Get_M_Konechn_vyh_beskon;
    property M_Vyhodit_iz_srochn_v_tekushem: TBABoolean read _Get_M_Vyhodit_iz_srochn_v_tekushem;
    property M_Min_god_v_otd: TBAInteger read _Get_M_Min_god_v_otd;
    property M_Min_nom_v_otd: TBAInteger read _Get_M_Min_nom_v_otd;
    property M_Shapka_srochn_razdela: TBAString read _Get_M_Shapka_srochn_razdela;
    property M_Vyh_v_srochn_v_tek_vyp: TBABoolean read _Get_M_Vyh_v_srochn_v_tek_vyp;
    property M_Primechanie: TBAString read _Get_M_Primechanie;
    property M_VBaze: TBABoolean read _Get_M_VBaze;
    property M_Slovo_sortirovki: TBAString read _Get_M_Slovo_sortirovki;
    property M_Vyh_po_ukaz_nom_tek_eshyo: TBABoolean read _Get_M_Vyh_po_ukaz_nom_tek_eshyo;
    property M_Vyhod_po_otd_nom_tek_eshyo: TBABoolean read _Get_M_Vyhod_po_otd_nom_tek_eshyo;
    property M_Vyh_v_pech_tek_eshyo: TBABoolean read _Get_M_Vyh_v_pech_tek_eshyo;
    property M_Vhod_v_vydelennyi: TBABoolean read _Get_M_Vhod_v_vydelennyi;
    property M_V_tege_girnosti: TBABoolean read _Get_M_V_tege_girnosti;
    property M_Chislo_vyh_posle_vklyuch_srochn: TBAInteger read _Get_M_Chislo_vyh_posle_vklyuch_srochn;
    property M_Chislo_vyh_posle_vklyuch_tekush: TBAInteger read _Get_M_Chislo_vyh_posle_vklyuch_tekush;
    property M_Ispoljz_sobstv_teg: TBABoolean read _Get_M_Ispoljz_sobstv_teg;
    property M_Sobstv_teg: TBAString read _Get_M_Sobstv_teg;
    property M_Teg: TBAString read _Get_M_Teg;
    property M_vhodit_v_razdel: TBoldObjectReference read _Get_M_vhodit_v_razdel;
    property M_obrabatyvaetsya_sotrudnikom: TBoldObjectReference read _Get_M_obrabatyvaetsya_sotrudnikom;
    property M_otnositsya_k_klientu: TBoldObjectReference read _Get_M_otnositsya_k_klientu;
    property M_obyaz_vyhodit_v: TVyvoditj_v_datuList read _Getobyaz_vyhodit_v;
    property M_vyh_po_otdeljn_nomeram: TNomer_vyhodaList read _Getvyh_po_otdeljn_nomeram;
    property WordBlob: String read _GetWordBlob write _SetWordBlob;
    property Data_dobavleniya: TDate read _GetData_dobavleniya write _SetData_dobavleniya;
    property Data_modifikacii: TDate read _GetData_modifikacii write _SetData_modifikacii;
    property Cvetovoe_oboznachenie: String read _GetCvetovoe_oboznachenie write _SetCvetovoe_oboznachenie;
    property YavlArhivnym: Boolean read _GetYavlArhivnym;
    property Otkorrektirovan: Boolean read _GetOtkorrektirovan write _SetOtkorrektirovan;
    property VyhVPechTekushii: Boolean read _GetVyhVPechTekushii;
    property Klyuch_slovo: String read _GetKlyuch_slovo write _SetKlyuch_slovo;
    property Sortirovatj_po_tekstu: Boolean read _GetSortirovatj_po_tekstu write _SetSortirovatj_po_tekstu;
    property Cvet_stroki: Integer read _GetCvet_stroki write _SetCvet_stroki;
    property Klient_yavl_organiz: Boolean read _GetKlient_yavl_organiz write _SetKlient_yavl_organiz;
    property Chislo_vyp_posle_vklyuch: Integer read _GetChislo_vyp_posle_vklyuch;
    property Identifikator_objyavleniya: double read _GetIdentifikator_objyavleniya write _SetIdentifikator_objyavleniya;
    property Data_vypuska_perv_vyhoda: TDate read _GetData_vypuska_perv_vyhoda;
    property VyhVPechEshyo: Boolean read _GetVyhVPechEshyo;
    property Data_tek_vyp: TDate read _GetData_tek_vyp;
    property Data_posl_vyp: TDate read _GetData_posl_vyp;
    property Ident_posl_vyp: double read _GetIdent_posl_vyp;
    property Ident_tek_vyp: double read _GetIdent_tek_vyp;
    property Identifikator_gaz: Integer read _GetIdentifikator_gaz;
    property Identifikator_razdela: double read _GetIdentifikator_razdela;
    property Tekst_objyavleniya: String read _GetTekst_objyavleniya write _SetTekst_objyavleniya;
    property Vhodit_v_kak_lib_razdel: Boolean read _GetVhodit_v_kak_lib_razdel;
    property Tek_vypusk_nomer: Integer read _GetTek_vypusk_nomer;
    property Tek_vypusk_god: Integer read _GetTek_vypusk_god;
    property Posl_vypusk_nomer: Integer read _GetPosl_vypusk_nomer;
    property Posl_vypusk_god: Integer read _GetPosl_vypusk_god;
    property Ukazatj_nomera: Boolean read _GetUkazatj_nomera write _SetUkazatj_nomera;
    property Vyh_po_ukaz_nomeram_v_tek: Boolean read _GetVyh_po_ukaz_nomeram_v_tek;
    property Vydel_girn_klyuch: Boolean read _GetVydel_girn_klyuch write _SetVydel_girn_klyuch;
    property Podskazka_o_vyhode_po_nomeram: String read _GetPodskazka_o_vyhode_po_nomeram;
    property Koncovka: String read _GetKoncovka;
    property Kolichestvo_v_srochnom: Integer read _GetKolichestvo_v_srochnom write _SetKolichestvo_v_srochnom;
    property Nach_nomer: Integer read _GetNach_nomer write _SetNach_nomer;
    property Konechn_nomer: Integer read _GetKonechn_nomer write _SetKonechn_nomer;
    property Nach_god: Integer read _GetNach_god write _SetNach_god;
    property Konechn_god: Integer read _GetKonechn_god write _SetKonechn_god;
    property Vyh_po_ukaz_nomeram_v_posl: Boolean read _GetVyh_po_ukaz_nomeram_v_posl;
    property Vyh_po_ukaz_nomeram_eshyo: Boolean read _GetVyh_po_ukaz_nomeram_eshyo;
    property Podskazka_o_vyhode_polnaya: String read _GetPodskazka_o_vyhode_polnaya;
    property Adres: String read _GetAdres;
    property Telefony: String read _GetTelefony;
    property Vyh_po_otd_nomer_tek: Boolean read _GetVyh_po_otd_nomer_tek;
    property Ukaz_otd_nomera: Boolean read _GetUkaz_otd_nomera write _SetUkaz_otd_nomera;
    property Vyh_po_otd_nomer_eshyo: Boolean read _GetVyh_po_otd_nomer_eshyo;
    property Chislo_vyh_po_ukaz_nomeram: Integer read _GetChislo_vyh_po_ukaz_nomeram;
    property Nomer_pervogo_vypuska: Integer read _GetNomer_pervogo_vypuska;
    property God_pervogo_vypuska: Integer read _GetGod_pervogo_vypuska;
    property VyhVPechPosl: Boolean read _GetVyhVPechPosl;
    property TekVypDoBlig: Boolean read _GetTekVypDoBlig;
    property Vyh_po_otdeljn_nomeram_posl: Boolean read _GetVyh_po_otdeljn_nomeram_posl;
    property Obnovl_tekst_soderg: Boolean read _GetObnovl_tekst_soderg write _SetObnovl_tekst_soderg;
    property Istoriya_smeny_periodov: String read _GetIstoriya_smeny_periodov write _SetIstoriya_smeny_periodov;
    property Otmenyaemyi_nomer: Integer read _GetOtmenyaemyi_nomer write _SetOtmenyaemyi_nomer;
    property Kolichestvo_otd_nom_vyhoda: Integer read _GetKolichestvo_otd_nom_vyhoda;
    property Kol_nom_vyh_v_intervale: Integer read _GetKol_nom_vyh_v_intervale;
    property Vsego_nom_vyhoda: Integer read _GetVsego_nom_vyhoda;
    property Srochn_boljsh_chem_vyh: Boolean read _GetSrochn_boljsh_chem_vyh;
    property Konechn_vyh_beskon: Boolean read _GetKonechn_vyh_beskon write _SetKonechn_vyh_beskon;
    property Vyhodit_iz_srochn_v_tekushem: Boolean read _GetVyhodit_iz_srochn_v_tekushem;
    property Min_god_v_otd: Integer read _GetMin_god_v_otd;
    property Min_nom_v_otd: Integer read _GetMin_nom_v_otd;
    property Shapka_srochn_razdela: String read _GetShapka_srochn_razdela;
    property Vyh_v_srochn_v_tek_vyp: Boolean read _GetVyh_v_srochn_v_tek_vyp;
    property Primechanie: String read _GetPrimechanie write _SetPrimechanie;
    property VBaze: Boolean read _GetVBaze write _SetVBaze;
    property Slovo_sortirovki: String read _GetSlovo_sortirovki;
    property Vyh_po_ukaz_nom_tek_eshyo: Boolean read _GetVyh_po_ukaz_nom_tek_eshyo;
    property Vyhod_po_otd_nom_tek_eshyo: Boolean read _GetVyhod_po_otd_nom_tek_eshyo;
    property Vyh_v_pech_tek_eshyo: Boolean read _GetVyh_v_pech_tek_eshyo;
    property Vhod_v_vydelennyi: Boolean read _GetVhod_v_vydelennyi;
    property V_tege_girnosti: Boolean read _GetV_tege_girnosti write _SetV_tege_girnosti;
    property Chislo_vyh_posle_vklyuch_srochn: Integer read _GetChislo_vyh_posle_vklyuch_srochn;
    property Chislo_vyh_posle_vklyuch_tekush: Integer read _GetChislo_vyh_posle_vklyuch_tekush;
    property Ispoljz_sobstv_teg: Boolean read _GetIspoljz_sobstv_teg write _SetIspoljz_sobstv_teg;
    property Sobstv_teg: String read _GetSobstv_teg write _SetSobstv_teg;
    property Teg: String read _GetTeg;
    property vhodit_v_razdel: TRazdel read _Getvhodit_v_razdel write _Setvhodit_v_razdel;
    property obrabatyvaetsya_sotrudnikom: TPersonal read _Getobrabatyvaetsya_sotrudnikom write _Setobrabatyvaetsya_sotrudnikom;
    property otnositsya_k_klientu: TKlient read _Getotnositsya_k_klientu write _Setotnositsya_k_klientu;
    property obyaz_vyhodit_v: TVyvoditj_v_datuList read _Getobyaz_vyhodit_v;
    property vyh_po_otdeljn_nomeram: TNomer_vyhodaList read _Getvyh_po_otdeljn_nomeram;
  end;

  TRazdel = class(TShablon_razdela)
  private
    function _Get_M_Klyuch_naimenovanie: TBAString;
    function _GetKlyuch_naimenovanie: String;
    procedure _SetKlyuch_naimenovanie(const NewValue: String);
    function _Get_M_Otkorretir: TBABoolean;
    function _GetOtkorretir: Boolean;
    procedure _SetOtkorretir(const NewValue: Boolean);
    function _Get_M_GotNaVygr: TBABoolean;
    function _GetGotNaVygr: Boolean;
    procedure _SetGotNaVygr(const NewValue: Boolean);
    function _Get_M_SodergObjyavleniya: TBABoolean;
    function _GetSodergObjyavleniya: Boolean;
    procedure _SetSodergObjyavleniya(const NewValue: Boolean);
    function _Get_M_CvetovoeOboznach: TBAString;
    function _GetCvetovoeOboznach: String;
    procedure _SetCvetovoeOboznach(const NewValue: String);
    function _Get_M_WordBlob: TBATypedBlob;
    function _GetWordBlob: String;
    procedure _SetWordBlob(const NewValue: String);
    function _Get_M_TekstovZaglavie: TBAString;
    function _GetTekstovZaglavie: String;
    procedure _SetTekstovZaglavie(const NewValue: String);
    function _Get_M_Spisok_vklyuch_razdeloa: TBAString;
    function _GetSpisok_vklyuch_razdeloa: String;
    procedure _SetSpisok_vklyuch_razdeloa(const NewValue: String);
    function _Get_M_Identifikator_razdela: TBAFloat;
    function _GetIdentifikator_razdela: double;
    procedure _SetIdentifikator_razdela(const NewValue: double);
    function _Get_M_Identifikator_vypuska: TBAFloat;
    function _GetIdentifikator_vypuska: double;
    function _Get_M_Tek_vyp_identifikator: TBAFloat;
    function _GetTek_vyp_identifikator: double;
    function _Get_M_Tek_vypusk_data: TBADate;
    function _GetTek_vypusk_data: TDate;
    function _Get_M_Posl_vyp_data: TBADate;
    function _GetPosl_vyp_data: TDate;
    function _Get_M_Posl_vyp_identifikator: TBAFloat;
    function _GetPosl_vyp_identifikator: double;
    function _Get_M_Data_vypuska: TBADate;
    function _GetData_vypuska: TDate;
    function _Get_M_Identifikator_gaz: TBAInteger;
    function _GetIdentifikator_gaz: Integer;
    function _Get_M_Yavl_kornevym: TBABoolean;
    function _GetYavl_kornevym: Boolean;
    function _Get_M_Chislo_sortirovki: TBAInteger;
    function _GetChislo_sortirovki: Integer;
    procedure _SetChislo_sortirovki(const NewValue: Integer);
    function _Get_M_Tek_vypusk_nomer: TBAInteger;
    function _GetTek_vypusk_nomer: Integer;
    function _Get_M_Tek_vypusk_god: TBAInteger;
    function _GetTek_vypusk_god: Integer;
    function _Get_M_Posl_vypusk_nomer: TBAInteger;
    function _GetPosl_vypusk_nomer: Integer;
    function _Get_M_Posl_vypusk_god: TBAInteger;
    function _GetPosl_vypusk_god: Integer;
    function _Get_M_Yavl_srochnym: TBABoolean;
    function _GetYavl_srochnym: Boolean;
    function _Get_M_Kornevoi_srochnyi_razdel: TBABoolean;
    function _GetKornevoi_srochnyi_razdel: Boolean;
    procedure _SetKornevoi_srochnyi_razdel(const NewValue: Boolean);
    function _Get_M_Ukazatj_marker: TBABoolean;
    function _GetUkazatj_marker: Boolean;
    procedure _SetUkazatj_marker(const NewValue: Boolean);
    function _Get_M_Marker: TBAString;
    function _GetMarker: String;
    procedure _SetMarker(const NewValue: String);
    function _Get_M_ProbelovDoMarkera: TBAInteger;
    function _GetProbelovDoMarkera: Integer;
    procedure _SetProbelovDoMarkera(const NewValue: Integer);
    function _Get_M_Probelov_PosleMarkera: TBAInteger;
    function _GetProbelov_PosleMarkera: Integer;
    procedure _SetProbelov_PosleMarkera(const NewValue: Integer);
    function _Get_M_Imeet_opr_srochn: TBABoolean;
    function _GetImeet_opr_srochn: Boolean;
    function _Get_M_Putj_razdela: TBAString;
    function _GetPutj_razdela: String;
    function _Get_M_Imeet_formu_kupona: TBABoolean;
    function _GetImeet_formu_kupona: Boolean;
    function _Get_M_Kod_formy_kupona: TBAString;
    function _GetKod_formy_kupona: String;
    function _Get_M_Pokaz_objyavleniya: TBABoolean;
    function _GetPokaz_objyavleniya: Boolean;
    function _Get_M_PriznProdayu: TBABoolean;
    function _GetPriznProdayu: Boolean;
    function _Get_M_PrizeKuplyu: TBABoolean;
    function _GetPrizeKuplyu: Boolean;
    function _Get_M_PriznMenyayu: TBABoolean;
    function _GetPriznMenyayu: Boolean;
    function _Get_M_PriznSdayu: TBABoolean;
    function _GetPriznSdayu: Boolean;
    function _Get_M_PriznSnimu: TBABoolean;
    function _GetPriznSnimu: Boolean;
    function _Get_M_PriznVypolnyu: TBABoolean;
    function _GetPriznVypolnyu: Boolean;
    function _Get_M_PriznSoglasen: TBABoolean;
    function _GetPriznSoglasen: Boolean;
    function _Get_M_Kod_priznaka: TBAInteger;
    function _GetKod_priznaka: Integer;
    function _Get_M_Shapka_srochnogo_razd: TBAString;
    function _GetShapka_srochnogo_razd: String;
    procedure _SetShapka_srochnogo_razd(const NewValue: String);
    function _Get_M_Sort_vklyuch_po_klyuch: TBABoolean;
    function _GetSort_vklyuch_po_klyuch: Boolean;
    procedure _SetSort_vklyuch_po_klyuch(const NewValue: Boolean);
    function _Get_M_Steretj_perv_nesk_simv: TBABoolean;
    function _GetSteretj_perv_nesk_simv: Boolean;
    procedure _SetSteretj_perv_nesk_simv(const NewValue: Boolean);
    function _Get_M_Kol_stir_simvolov: TBAInteger;
    function _GetKol_stir_simvolov: Integer;
    procedure _SetKol_stir_simvolov(const NewValue: Integer);
    function _Get_M_Vydel_perv_slovo_girnym: TBABoolean;
    function _GetVydel_perv_slovo_girnym: Boolean;
    procedure _SetVydel_perv_slovo_girnym(const NewValue: Boolean);
    function _Get_M_Kol_perv_slov: TBAInteger;
    function _GetKol_perv_slov: Integer;
    procedure _SetKol_perv_slov(const NewValue: Integer);
    function _Get_M_Chislo_objyavlenii: TBAInteger;
    function _GetChislo_objyavlenii: Integer;
    function _Get_M_Chislo_nekorrektn: TBAInteger;
    function _GetChislo_nekorrektn: Integer;
    function _Get_M_Ident_vyd_razd: TBAFloat;
    function _GetIdent_vyd_razd: double;
    function _Get_M_Vhod_v_vydelennyi: TBABoolean;
    function _GetVhod_v_vydelennyi: Boolean;
    function _Get_M_Teg: TBAString;
    function _GetTeg: String;
    function _Get_M_Teg_objyavl: TBAString;
    function _GetTeg_objyavl: String;
    procedure _SetTeg_objyavl(const NewValue: String);
    function _Get_M_Ispoljz_teg_gl_razd: TBABoolean;
    function _GetIspoljz_teg_gl_razd: Boolean;
    procedure _SetIspoljz_teg_gl_razd(const NewValue: Boolean);
    function _Get_M_Sobstv_teg: TBAString;
    function _GetSobstv_teg: String;
    procedure _SetSobstv_teg(const NewValue: String);
    function _Getvklyuchaet_objyavlenie: TObjyavlenieList;
    function _Getvhodit_v_vypusk: TVypuskList;
    function _GetLinkvhodit_v_vypuskvklyuchaet_razdel: TLinkvhodit_v_vypuskvklyuchaet_razdelList;
    function _Getvhodit_v_glavn_razdel: TRazdel;
    function _Get_M_vhodit_v_glavn_razdel: TBoldObjectReference;
    procedure _Setvhodit_v_glavn_razdel(const value: TRazdel);
    function _Getsoderg_mladsh_razdel: TRazdelList;
    function _Getrazdel_zapolnyaetsya: TPersonal;
    function _Get_M_razdel_zapolnyaetsya: TBoldObjectReference;
    procedure _Setrazdel_zapolnyaetsya(const value: TPersonal);
    function _GetSoderg_nabor_objvl_s_klyuch: TKlyuchi_vklyuch__objyavleniiList;
    function _Getimet_srochn_razdel: TRazdel;
    function _Get_M_imet_srochn_razdel: TBoldObjectReference;
    procedure _Setimet_srochn_razdel(const value: TRazdel);
    function _Getyavl_srochn_dlya: TRazdelList;
    function _Getimeet_priznak: TPriznak_razdela;
    function _Get_M_imeet_priznak: TBoldObjectReference;
    procedure _Setimeet_priznak(const value: TPriznak_razdela);
    function _Getispoljz_dlya_dobavleniya: TKupon;
    function _Get_M_ispoljz_dlya_dobavleniya: TBoldObjectReference;
    procedure _Setispoljz_dlya_dobavleniya(const value: TKupon);
  protected
  public
    property M_Klyuch_naimenovanie: TBAString read _Get_M_Klyuch_naimenovanie;
    property M_Otkorretir: TBABoolean read _Get_M_Otkorretir;
    property M_GotNaVygr: TBABoolean read _Get_M_GotNaVygr;
    property M_SodergObjyavleniya: TBABoolean read _Get_M_SodergObjyavleniya;
    property M_CvetovoeOboznach: TBAString read _Get_M_CvetovoeOboznach;
    property M_WordBlob: TBATypedBlob read _Get_M_WordBlob;
    property M_TekstovZaglavie: TBAString read _Get_M_TekstovZaglavie;
    property M_Spisok_vklyuch_razdeloa: TBAString read _Get_M_Spisok_vklyuch_razdeloa;
    property M_Identifikator_razdela: TBAFloat read _Get_M_Identifikator_razdela;
    property M_Identifikator_vypuska: TBAFloat read _Get_M_Identifikator_vypuska;
    property M_Tek_vyp_identifikator: TBAFloat read _Get_M_Tek_vyp_identifikator;
    property M_Tek_vypusk_data: TBADate read _Get_M_Tek_vypusk_data;
    property M_Posl_vyp_data: TBADate read _Get_M_Posl_vyp_data;
    property M_Posl_vyp_identifikator: TBAFloat read _Get_M_Posl_vyp_identifikator;
    property M_Data_vypuska: TBADate read _Get_M_Data_vypuska;
    property M_Identifikator_gaz: TBAInteger read _Get_M_Identifikator_gaz;
    property M_Yavl_kornevym: TBABoolean read _Get_M_Yavl_kornevym;
    property M_Chislo_sortirovki: TBAInteger read _Get_M_Chislo_sortirovki;
    property M_Tek_vypusk_nomer: TBAInteger read _Get_M_Tek_vypusk_nomer;
    property M_Tek_vypusk_god: TBAInteger read _Get_M_Tek_vypusk_god;
    property M_Posl_vypusk_nomer: TBAInteger read _Get_M_Posl_vypusk_nomer;
    property M_Posl_vypusk_god: TBAInteger read _Get_M_Posl_vypusk_god;
    property M_Yavl_srochnym: TBABoolean read _Get_M_Yavl_srochnym;
    property M_Kornevoi_srochnyi_razdel: TBABoolean read _Get_M_Kornevoi_srochnyi_razdel;
    property M_Ukazatj_marker: TBABoolean read _Get_M_Ukazatj_marker;
    property M_Marker: TBAString read _Get_M_Marker;
    property M_ProbelovDoMarkera: TBAInteger read _Get_M_ProbelovDoMarkera;
    property M_Probelov_PosleMarkera: TBAInteger read _Get_M_Probelov_PosleMarkera;
    property M_Imeet_opr_srochn: TBABoolean read _Get_M_Imeet_opr_srochn;
    property M_Putj_razdela: TBAString read _Get_M_Putj_razdela;
    property M_Imeet_formu_kupona: TBABoolean read _Get_M_Imeet_formu_kupona;
    property M_Kod_formy_kupona: TBAString read _Get_M_Kod_formy_kupona;
    property M_Pokaz_objyavleniya: TBABoolean read _Get_M_Pokaz_objyavleniya;
    property M_PriznProdayu: TBABoolean read _Get_M_PriznProdayu;
    property M_PrizeKuplyu: TBABoolean read _Get_M_PrizeKuplyu;
    property M_PriznMenyayu: TBABoolean read _Get_M_PriznMenyayu;
    property M_PriznSdayu: TBABoolean read _Get_M_PriznSdayu;
    property M_PriznSnimu: TBABoolean read _Get_M_PriznSnimu;
    property M_PriznVypolnyu: TBABoolean read _Get_M_PriznVypolnyu;
    property M_PriznSoglasen: TBABoolean read _Get_M_PriznSoglasen;
    property M_Kod_priznaka: TBAInteger read _Get_M_Kod_priznaka;
    property M_Shapka_srochnogo_razd: TBAString read _Get_M_Shapka_srochnogo_razd;
    property M_Sort_vklyuch_po_klyuch: TBABoolean read _Get_M_Sort_vklyuch_po_klyuch;
    property M_Steretj_perv_nesk_simv: TBABoolean read _Get_M_Steretj_perv_nesk_simv;
    property M_Kol_stir_simvolov: TBAInteger read _Get_M_Kol_stir_simvolov;
    property M_Vydel_perv_slovo_girnym: TBABoolean read _Get_M_Vydel_perv_slovo_girnym;
    property M_Kol_perv_slov: TBAInteger read _Get_M_Kol_perv_slov;
    property M_Chislo_objyavlenii: TBAInteger read _Get_M_Chislo_objyavlenii;
    property M_Chislo_nekorrektn: TBAInteger read _Get_M_Chislo_nekorrektn;
    property M_Ident_vyd_razd: TBAFloat read _Get_M_Ident_vyd_razd;
    property M_Vhod_v_vydelennyi: TBABoolean read _Get_M_Vhod_v_vydelennyi;
    property M_Teg: TBAString read _Get_M_Teg;
    property M_Teg_objyavl: TBAString read _Get_M_Teg_objyavl;
    property M_Ispoljz_teg_gl_razd: TBABoolean read _Get_M_Ispoljz_teg_gl_razd;
    property M_Sobstv_teg: TBAString read _Get_M_Sobstv_teg;
    property M_vklyuchaet_objyavlenie: TObjyavlenieList read _Getvklyuchaet_objyavlenie;
    property M_vhodit_v_vypusk: TVypuskList read _Getvhodit_v_vypusk;
    property M_Linkvhodit_v_vypuskvklyuchaet_razdel: TLinkvhodit_v_vypuskvklyuchaet_razdelList read _GetLinkvhodit_v_vypuskvklyuchaet_razdel;
    property M_vhodit_v_glavn_razdel: TBoldObjectReference read _Get_M_vhodit_v_glavn_razdel;
    property M_soderg_mladsh_razdel: TRazdelList read _Getsoderg_mladsh_razdel;
    property M_razdel_zapolnyaetsya: TBoldObjectReference read _Get_M_razdel_zapolnyaetsya;
    property M_Soderg_nabor_objvl_s_klyuch: TKlyuchi_vklyuch__objyavleniiList read _GetSoderg_nabor_objvl_s_klyuch;
    property M_imet_srochn_razdel: TBoldObjectReference read _Get_M_imet_srochn_razdel;
    property M_yavl_srochn_dlya: TRazdelList read _Getyavl_srochn_dlya;
    property M_imeet_priznak: TBoldObjectReference read _Get_M_imeet_priznak;
    property M_ispoljz_dlya_dobavleniya: TBoldObjectReference read _Get_M_ispoljz_dlya_dobavleniya;
    property Klyuch_naimenovanie: String read _GetKlyuch_naimenovanie write _SetKlyuch_naimenovanie;
    property Otkorretir: Boolean read _GetOtkorretir write _SetOtkorretir;
    property GotNaVygr: Boolean read _GetGotNaVygr write _SetGotNaVygr;
    property SodergObjyavleniya: Boolean read _GetSodergObjyavleniya write _SetSodergObjyavleniya;
    property CvetovoeOboznach: String read _GetCvetovoeOboznach write _SetCvetovoeOboznach;
    property WordBlob: String read _GetWordBlob write _SetWordBlob;
    property TekstovZaglavie: String read _GetTekstovZaglavie write _SetTekstovZaglavie;
    property Spisok_vklyuch_razdeloa: String read _GetSpisok_vklyuch_razdeloa write _SetSpisok_vklyuch_razdeloa;
    property Identifikator_razdela: double read _GetIdentifikator_razdela write _SetIdentifikator_razdela;
    property Identifikator_vypuska: double read _GetIdentifikator_vypuska;
    property Tek_vyp_identifikator: double read _GetTek_vyp_identifikator;
    property Tek_vypusk_data: TDate read _GetTek_vypusk_data;
    property Posl_vyp_data: TDate read _GetPosl_vyp_data;
    property Posl_vyp_identifikator: double read _GetPosl_vyp_identifikator;
    property Data_vypuska: TDate read _GetData_vypuska;
    property Identifikator_gaz: Integer read _GetIdentifikator_gaz;
    property Yavl_kornevym: Boolean read _GetYavl_kornevym;
    property Chislo_sortirovki: Integer read _GetChislo_sortirovki write _SetChislo_sortirovki;
    property Tek_vypusk_nomer: Integer read _GetTek_vypusk_nomer;
    property Tek_vypusk_god: Integer read _GetTek_vypusk_god;
    property Posl_vypusk_nomer: Integer read _GetPosl_vypusk_nomer;
    property Posl_vypusk_god: Integer read _GetPosl_vypusk_god;
    property Yavl_srochnym: Boolean read _GetYavl_srochnym;
    property Kornevoi_srochnyi_razdel: Boolean read _GetKornevoi_srochnyi_razdel write _SetKornevoi_srochnyi_razdel;
    property Ukazatj_marker: Boolean read _GetUkazatj_marker write _SetUkazatj_marker;
    property Marker: String read _GetMarker write _SetMarker;
    property ProbelovDoMarkera: Integer read _GetProbelovDoMarkera write _SetProbelovDoMarkera;
    property Probelov_PosleMarkera: Integer read _GetProbelov_PosleMarkera write _SetProbelov_PosleMarkera;
    property Imeet_opr_srochn: Boolean read _GetImeet_opr_srochn;
    property Putj_razdela: String read _GetPutj_razdela;
    property Imeet_formu_kupona: Boolean read _GetImeet_formu_kupona;
    property Kod_formy_kupona: String read _GetKod_formy_kupona;
    property Pokaz_objyavleniya: Boolean read _GetPokaz_objyavleniya;
    property PriznProdayu: Boolean read _GetPriznProdayu;
    property PrizeKuplyu: Boolean read _GetPrizeKuplyu;
    property PriznMenyayu: Boolean read _GetPriznMenyayu;
    property PriznSdayu: Boolean read _GetPriznSdayu;
    property PriznSnimu: Boolean read _GetPriznSnimu;
    property PriznVypolnyu: Boolean read _GetPriznVypolnyu;
    property PriznSoglasen: Boolean read _GetPriznSoglasen;
    property Kod_priznaka: Integer read _GetKod_priznaka;
    property Shapka_srochnogo_razd: String read _GetShapka_srochnogo_razd write _SetShapka_srochnogo_razd;
    property Sort_vklyuch_po_klyuch: Boolean read _GetSort_vklyuch_po_klyuch write _SetSort_vklyuch_po_klyuch;
    property Steretj_perv_nesk_simv: Boolean read _GetSteretj_perv_nesk_simv write _SetSteretj_perv_nesk_simv;
    property Kol_stir_simvolov: Integer read _GetKol_stir_simvolov write _SetKol_stir_simvolov;
    property Vydel_perv_slovo_girnym: Boolean read _GetVydel_perv_slovo_girnym write _SetVydel_perv_slovo_girnym;
    property Kol_perv_slov: Integer read _GetKol_perv_slov write _SetKol_perv_slov;
    property Chislo_objyavlenii: Integer read _GetChislo_objyavlenii;
    property Chislo_nekorrektn: Integer read _GetChislo_nekorrektn;
    property Ident_vyd_razd: double read _GetIdent_vyd_razd;
    property Vhod_v_vydelennyi: Boolean read _GetVhod_v_vydelennyi;
    property Teg: String read _GetTeg;
    property Teg_objyavl: String read _GetTeg_objyavl write _SetTeg_objyavl;
    property Ispoljz_teg_gl_razd: Boolean read _GetIspoljz_teg_gl_razd write _SetIspoljz_teg_gl_razd;
    property Sobstv_teg: String read _GetSobstv_teg write _SetSobstv_teg;
    property vklyuchaet_objyavlenie: TObjyavlenieList read _Getvklyuchaet_objyavlenie;
    property vhodit_v_vypusk: TVypuskList read _Getvhodit_v_vypusk;
    property Linkvhodit_v_vypuskvklyuchaet_razdel: TLinkvhodit_v_vypuskvklyuchaet_razdelList read _GetLinkvhodit_v_vypuskvklyuchaet_razdel;
    property vhodit_v_glavn_razdel: TRazdel read _Getvhodit_v_glavn_razdel write _Setvhodit_v_glavn_razdel;
    property soderg_mladsh_razdel: TRazdelList read _Getsoderg_mladsh_razdel;
    property razdel_zapolnyaetsya: TPersonal read _Getrazdel_zapolnyaetsya write _Setrazdel_zapolnyaetsya;
    property Soderg_nabor_objvl_s_klyuch: TKlyuchi_vklyuch__objyavleniiList read _GetSoderg_nabor_objvl_s_klyuch;
    property imet_srochn_razdel: TRazdel read _Getimet_srochn_razdel write _Setimet_srochn_razdel;
    property yavl_srochn_dlya: TRazdelList read _Getyavl_srochn_dlya;
    property imeet_priznak: TPriznak_razdela read _Getimeet_priznak write _Setimeet_priznak;
    property ispoljz_dlya_dobavleniya: TKupon read _Getispoljz_dlya_dobavleniya write _Setispoljz_dlya_dobavleniya;
  end;

  TKlient = class(TOrganizaciya)
  private
    function _Get_M_Yavl_yur_licom: TBABoolean;
    function _GetYavl_yur_licom: Boolean;
    procedure _SetYavl_yur_licom(const NewValue: Boolean);
    function _Get_M_Imenovanie: TBAString;
    function _GetImenovanie: String;
    function _Get_M_Adres: TBAString;
    function _GetAdres: String;
    function _Get_M_Telefony: TBAString;
    function _GetTelefony: String;
    function _Get_M_Cvetovoe_oboznachenie: TBAString;
    function _GetCvetovoe_oboznachenie: String;
    procedure _SetCvetovoe_oboznachenie(const NewValue: String);
    function _Getdayot_v_vypusk: TObjyavlenieList;
  protected
  public
    property M_Yavl_yur_licom: TBABoolean read _Get_M_Yavl_yur_licom;
    property M_Imenovanie: TBAString read _Get_M_Imenovanie;
    property M_Adres: TBAString read _Get_M_Adres;
    property M_Telefony: TBAString read _Get_M_Telefony;
    property M_Cvetovoe_oboznachenie: TBAString read _Get_M_Cvetovoe_oboznachenie;
    property M_dayot_v_vypusk: TObjyavlenieList read _Getdayot_v_vypusk;
    property Yavl_yur_licom: Boolean read _GetYavl_yur_licom write _SetYavl_yur_licom;
    property Imenovanie: String read _GetImenovanie;
    property Adres: String read _GetAdres;
    property Telefony: String read _GetTelefony;
    property Cvetovoe_oboznachenie: String read _GetCvetovoe_oboznachenie write _SetCvetovoe_oboznachenie;
    property dayot_v_vypusk: TObjyavlenieList read _Getdayot_v_vypusk;
  end;

  TPersonal = class(TOrganizaciya)
  private
    function _Get_M_Login: TBAString;
    function _GetLogin: String;
    procedure _SetLogin(const NewValue: String);
    function _Get_M_Parolj: TBAString;
    function _GetParolj: String;
    procedure _SetParolj(const NewValue: String);
    function _Get_M_Prava: TBAInteger;
    function _GetPrava: Integer;
    procedure _SetPrava(const NewValue: Integer);
    function _Get_M_Kommentarii: TBAString;
    function _GetKommentarii: String;
    procedure _SetKommentarii(const NewValue: String);
    function _Get_M_Razreshitj_vsyo: TBABoolean;
    function _GetRazreshitj_vsyo: Boolean;
    procedure _SetRazreshitj_vsyo(const NewValue: Boolean);
    function _Get_M_Razresh_administr: TBABoolean;
    function _GetRazresh_administr: Boolean;
    procedure _SetRazresh_administr(const NewValue: Boolean);
    function _Get_M_Razresh_nastroiku_raboty: TBABoolean;
    function _GetRazresh_nastroiku_raboty: Boolean;
    procedure _SetRazresh_nastroiku_raboty(const NewValue: Boolean);
    function _Get_M_Razreshitj_prosmotr_logov: TBABoolean;
    function _GetRazreshitj_prosmotr_logov: Boolean;
    procedure _SetRazreshitj_prosmotr_logov(const NewValue: Boolean);
    function _Get_M_Razr_udalenie_izdanii: TBABoolean;
    function _GetRazr_udalenie_izdanii: Boolean;
    procedure _SetRazr_udalenie_izdanii(const NewValue: Boolean);
    function _Get_M_Razreshitj_udalenie_vypuskov: TBABoolean;
    function _GetRazreshitj_udalenie_vypuskov: Boolean;
    procedure _SetRazreshitj_udalenie_vypuskov(const NewValue: Boolean);
    function _Get_M_Razr_udalenie_razdelov: TBABoolean;
    function _GetRazr_udalenie_razdelov: Boolean;
    procedure _SetRazr_udalenie_razdelov(const NewValue: Boolean);
    function _Get_M_Razreshitj_udalenie_objyavlenii: TBABoolean;
    function _GetRazreshitj_udalenie_objyavlenii: Boolean;
    procedure _SetRazreshitj_udalenie_objyavlenii(const NewValue: Boolean);
    function _Get_M_Razreshitj_udalenie_ostaljnogo: TBABoolean;
    function _GetRazreshitj_udalenie_ostaljnogo: Boolean;
    procedure _SetRazreshitj_udalenie_ostaljnogo(const NewValue: Boolean);
    function _Get_M_Razr_prav_redkomen_sprav: TBABoolean;
    function _GetRazr_prav_redkomen_sprav: Boolean;
    procedure _SetRazr_prav_redkomen_sprav(const NewValue: Boolean);
    function _Get_M_Razr_prav_oper_razdelov: TBABoolean;
    function _GetRazr_prav_oper_razdelov: Boolean;
    procedure _SetRazr_prav_oper_razdelov(const NewValue: Boolean);
    function _Get_M_Pokaz_cveta_klientov: TBABoolean;
    function _GetPokaz_cveta_klientov: Boolean;
    procedure _SetPokaz_cveta_klientov(const NewValue: Boolean);
    function _Getrabotaet_s: TObjyavlenieList;
    function _Getdeistviya_fiksiruyutsya_v: TLog_operaciiList;
    function _Getsotrudnik_rabotaet_s: TRazdelList;
  protected
  public
    property M_Login: TBAString read _Get_M_Login;
    property M_Parolj: TBAString read _Get_M_Parolj;
    property M_Prava: TBAInteger read _Get_M_Prava;
    property M_Kommentarii: TBAString read _Get_M_Kommentarii;
    property M_Razreshitj_vsyo: TBABoolean read _Get_M_Razreshitj_vsyo;
    property M_Razresh_administr: TBABoolean read _Get_M_Razresh_administr;
    property M_Razresh_nastroiku_raboty: TBABoolean read _Get_M_Razresh_nastroiku_raboty;
    property M_Razreshitj_prosmotr_logov: TBABoolean read _Get_M_Razreshitj_prosmotr_logov;
    property M_Razr_udalenie_izdanii: TBABoolean read _Get_M_Razr_udalenie_izdanii;
    property M_Razreshitj_udalenie_vypuskov: TBABoolean read _Get_M_Razreshitj_udalenie_vypuskov;
    property M_Razr_udalenie_razdelov: TBABoolean read _Get_M_Razr_udalenie_razdelov;
    property M_Razreshitj_udalenie_objyavlenii: TBABoolean read _Get_M_Razreshitj_udalenie_objyavlenii;
    property M_Razreshitj_udalenie_ostaljnogo: TBABoolean read _Get_M_Razreshitj_udalenie_ostaljnogo;
    property M_Razr_prav_redkomen_sprav: TBABoolean read _Get_M_Razr_prav_redkomen_sprav;
    property M_Razr_prav_oper_razdelov: TBABoolean read _Get_M_Razr_prav_oper_razdelov;
    property M_Pokaz_cveta_klientov: TBABoolean read _Get_M_Pokaz_cveta_klientov;
    property M_rabotaet_s: TObjyavlenieList read _Getrabotaet_s;
    property M_deistviya_fiksiruyutsya_v: TLog_operaciiList read _Getdeistviya_fiksiruyutsya_v;
    property M_sotrudnik_rabotaet_s: TRazdelList read _Getsotrudnik_rabotaet_s;
    property Login: String read _GetLogin write _SetLogin;
    property Parolj: String read _GetParolj write _SetParolj;
    property Prava: Integer read _GetPrava write _SetPrava;
    property Kommentarii: String read _GetKommentarii write _SetKommentarii;
    property Razreshitj_vsyo: Boolean read _GetRazreshitj_vsyo write _SetRazreshitj_vsyo;
    property Razresh_administr: Boolean read _GetRazresh_administr write _SetRazresh_administr;
    property Razresh_nastroiku_raboty: Boolean read _GetRazresh_nastroiku_raboty write _SetRazresh_nastroiku_raboty;
    property Razreshitj_prosmotr_logov: Boolean read _GetRazreshitj_prosmotr_logov write _SetRazreshitj_prosmotr_logov;
    property Razr_udalenie_izdanii: Boolean read _GetRazr_udalenie_izdanii write _SetRazr_udalenie_izdanii;
    property Razreshitj_udalenie_vypuskov: Boolean read _GetRazreshitj_udalenie_vypuskov write _SetRazreshitj_udalenie_vypuskov;
    property Razr_udalenie_razdelov: Boolean read _GetRazr_udalenie_razdelov write _SetRazr_udalenie_razdelov;
    property Razreshitj_udalenie_objyavlenii: Boolean read _GetRazreshitj_udalenie_objyavlenii write _SetRazreshitj_udalenie_objyavlenii;
    property Razreshitj_udalenie_ostaljnogo: Boolean read _GetRazreshitj_udalenie_ostaljnogo write _SetRazreshitj_udalenie_ostaljnogo;
    property Razr_prav_redkomen_sprav: Boolean read _GetRazr_prav_redkomen_sprav write _SetRazr_prav_redkomen_sprav;
    property Razr_prav_oper_razdelov: Boolean read _GetRazr_prav_oper_razdelov write _SetRazr_prav_oper_razdelov;
    property Pokaz_cveta_klientov: Boolean read _GetPokaz_cveta_klientov write _SetPokaz_cveta_klientov;
    property rabotaet_s: TObjyavlenieList read _Getrabotaet_s;
    property deistviya_fiksiruyutsya_v: TLog_operaciiList read _Getdeistviya_fiksiruyutsya_v;
    property sotrudnik_rabotaet_s: TRazdelList read _Getsotrudnik_rabotaet_s;
  end;

  TBusinessClassesRootList = class(TBoldObjectList)
  protected
    function GetBoldObject(index: Integer): TBusinessClassesRoot;
    procedure SetBoldObject(index: Integer; NewObject: TBusinessClassesRoot);
  public
    function Includes(anObject: TBusinessClassesRoot): Boolean;
    function IndexOf(anObject: TBusinessClassesRoot): Integer;
    procedure Add(NewObject: TBusinessClassesRoot);
    function AddNew: TBusinessClassesRoot;
    procedure Insert(index: Integer; NewObject: TBusinessClassesRoot);
    property BoldObjects[index: Integer]: TBusinessClassesRoot read GetBoldObject write SetBoldObject; default;
  end;

  TLinksostavlyaet_harakterispoljz_prizn_dobavleniyaList = class(TBusinessClassesRootList)
  protected
    function GetBoldObject(index: Integer): TLinksostavlyaet_harakterispoljz_prizn_dobavleniya;
    procedure SetBoldObject(index: Integer; NewObject: TLinksostavlyaet_harakterispoljz_prizn_dobavleniya);
  public
    function Includes(anObject: TLinksostavlyaet_harakterispoljz_prizn_dobavleniya): Boolean;
    function IndexOf(anObject: TLinksostavlyaet_harakterispoljz_prizn_dobavleniya): Integer;
    procedure Add(NewObject: TLinksostavlyaet_harakterispoljz_prizn_dobavleniya);
    function AddNew: TLinksostavlyaet_harakterispoljz_prizn_dobavleniya;
    procedure Insert(index: Integer; NewObject: TLinksostavlyaet_harakterispoljz_prizn_dobavleniya);
    property BoldObjects[index: Integer]: TLinksostavlyaet_harakterispoljz_prizn_dobavleniya read GetBoldObject write SetBoldObject; default;
  end;

  TLinkvhodit_v_vypuskvklyuchaet_razdelList = class(TBusinessClassesRootList)
  protected
    function GetBoldObject(index: Integer): TLinkvhodit_v_vypuskvklyuchaet_razdel;
    procedure SetBoldObject(index: Integer; NewObject: TLinkvhodit_v_vypuskvklyuchaet_razdel);
  public
    function Includes(anObject: TLinkvhodit_v_vypuskvklyuchaet_razdel): Boolean;
    function IndexOf(anObject: TLinkvhodit_v_vypuskvklyuchaet_razdel): Integer;
    procedure Add(NewObject: TLinkvhodit_v_vypuskvklyuchaet_razdel);
    function AddNew: TLinkvhodit_v_vypuskvklyuchaet_razdel;
    procedure Insert(index: Integer; NewObject: TLinkvhodit_v_vypuskvklyuchaet_razdel);
    property BoldObjects[index: Integer]: TLinkvhodit_v_vypuskvklyuchaet_razdel read GetBoldObject write SetBoldObject; default;
  end;

  TVyvoditj_v_datuList = class(TBusinessClassesRootList)
  protected
    function GetBoldObject(index: Integer): TVyvoditj_v_datu;
    procedure SetBoldObject(index: Integer; NewObject: TVyvoditj_v_datu);
  public
    function Includes(anObject: TVyvoditj_v_datu): Boolean;
    function IndexOf(anObject: TVyvoditj_v_datu): Integer;
    procedure Add(NewObject: TVyvoditj_v_datu);
    function AddNew: TVyvoditj_v_datu;
    procedure Insert(index: Integer; NewObject: TVyvoditj_v_datu);
    property BoldObjects[index: Integer]: TVyvoditj_v_datu read GetBoldObject write SetBoldObject; default;
  end;

  TVypuskList = class(TBusinessClassesRootList)
  protected
    function GetBoldObject(index: Integer): TVypusk;
    procedure SetBoldObject(index: Integer; NewObject: TVypusk);
  public
    function Includes(anObject: TVypusk): Boolean;
    function IndexOf(anObject: TVypusk): Integer;
    procedure Add(NewObject: TVypusk);
    function AddNew: TVypusk;
    procedure Insert(index: Integer; NewObject: TVypusk);
    property BoldObjects[index: Integer]: TVypusk read GetBoldObject write SetBoldObject; default;
  end;

  TGod_vyhodaList = class(TBusinessClassesRootList)
  protected
    function GetBoldObject(index: Integer): TGod_vyhoda;
    procedure SetBoldObject(index: Integer; NewObject: TGod_vyhoda);
  public
    function Includes(anObject: TGod_vyhoda): Boolean;
    function IndexOf(anObject: TGod_vyhoda): Integer;
    procedure Add(NewObject: TGod_vyhoda);
    function AddNew: TGod_vyhoda;
    procedure Insert(index: Integer; NewObject: TGod_vyhoda);
    property BoldObjects[index: Integer]: TGod_vyhoda read GetBoldObject write SetBoldObject; default;
  end;

  TKlass_poiskaList = class(TBusinessClassesRootList)
  protected
    function GetBoldObject(index: Integer): TKlass_poiska;
    procedure SetBoldObject(index: Integer; NewObject: TKlass_poiska);
  public
    function Includes(anObject: TKlass_poiska): Boolean;
    function IndexOf(anObject: TKlass_poiska): Integer;
    procedure Add(NewObject: TKlass_poiska);
    function AddNew: TKlass_poiska;
    procedure Insert(index: Integer; NewObject: TKlass_poiska);
    property BoldObjects[index: Integer]: TKlass_poiska read GetBoldObject write SetBoldObject; default;
  end;

  TLog_operaciiList = class(TBusinessClassesRootList)
  protected
    function GetBoldObject(index: Integer): TLog_operacii;
    procedure SetBoldObject(index: Integer; NewObject: TLog_operacii);
  public
    function Includes(anObject: TLog_operacii): Boolean;
    function IndexOf(anObject: TLog_operacii): Integer;
    procedure Add(NewObject: TLog_operacii);
    function AddNew: TLog_operacii;
    procedure Insert(index: Integer; NewObject: TLog_operacii);
    property BoldObjects[index: Integer]: TLog_operacii read GetBoldObject write SetBoldObject; default;
  end;

  TNomer_vyhodaList = class(TBusinessClassesRootList)
  protected
    function GetBoldObject(index: Integer): TNomer_vyhoda;
    procedure SetBoldObject(index: Integer; NewObject: TNomer_vyhoda);
  public
    function Includes(anObject: TNomer_vyhoda): Boolean;
    function IndexOf(anObject: TNomer_vyhoda): Integer;
    procedure Add(NewObject: TNomer_vyhoda);
    function AddNew: TNomer_vyhoda;
    procedure Insert(index: Integer; NewObject: TNomer_vyhoda);
    property BoldObjects[index: Integer]: TNomer_vyhoda read GetBoldObject write SetBoldObject; default;
  end;

  TPersonaList = class(TBusinessClassesRootList)
  protected
    function GetBoldObject(index: Integer): TPersona;
    procedure SetBoldObject(index: Integer; NewObject: TPersona);
  public
    function Includes(anObject: TPersona): Boolean;
    function IndexOf(anObject: TPersona): Integer;
    procedure Add(NewObject: TPersona);
    function AddNew: TPersona;
    procedure Insert(index: Integer; NewObject: TPersona);
    property BoldObjects[index: Integer]: TPersona read GetBoldObject write SetBoldObject; default;
  end;

  TSpravochnikList = class(TBusinessClassesRootList)
  protected
    function GetBoldObject(index: Integer): TSpravochnik;
    procedure SetBoldObject(index: Integer; NewObject: TSpravochnik);
  public
    function Includes(anObject: TSpravochnik): Boolean;
    function IndexOf(anObject: TSpravochnik): Integer;
    procedure Add(NewObject: TSpravochnik);
    function AddNew: TSpravochnik;
    procedure Insert(index: Integer; NewObject: TSpravochnik);
    property BoldObjects[index: Integer]: TSpravochnik read GetBoldObject write SetBoldObject; default;
  end;

  TSpravochnik_grupp_vypuskovList = class(TBusinessClassesRootList)
  protected
    function GetBoldObject(index: Integer): TSpravochnik_grupp_vypuskov;
    procedure SetBoldObject(index: Integer; NewObject: TSpravochnik_grupp_vypuskov);
  public
    function Includes(anObject: TSpravochnik_grupp_vypuskov): Boolean;
    function IndexOf(anObject: TSpravochnik_grupp_vypuskov): Integer;
    procedure Add(NewObject: TSpravochnik_grupp_vypuskov);
    function AddNew: TSpravochnik_grupp_vypuskov;
    procedure Insert(index: Integer; NewObject: TSpravochnik_grupp_vypuskov);
    property BoldObjects[index: Integer]: TSpravochnik_grupp_vypuskov read GetBoldObject write SetBoldObject; default;
  end;

  TShablon_objyavleniyaList = class(TBusinessClassesRootList)
  protected
    function GetBoldObject(index: Integer): TShablon_objyavleniya;
    procedure SetBoldObject(index: Integer; NewObject: TShablon_objyavleniya);
  public
    function Includes(anObject: TShablon_objyavleniya): Boolean;
    function IndexOf(anObject: TShablon_objyavleniya): Integer;
    procedure Add(NewObject: TShablon_objyavleniya);
    function AddNew: TShablon_objyavleniya;
    procedure Insert(index: Integer; NewObject: TShablon_objyavleniya);
    property BoldObjects[index: Integer]: TShablon_objyavleniya read GetBoldObject write SetBoldObject; default;
  end;

  TShablon_razdelaList = class(TBusinessClassesRootList)
  protected
    function GetBoldObject(index: Integer): TShablon_razdela;
    procedure SetBoldObject(index: Integer; NewObject: TShablon_razdela);
  public
    function Includes(anObject: TShablon_razdela): Boolean;
    function IndexOf(anObject: TShablon_razdela): Integer;
    procedure Add(NewObject: TShablon_razdela);
    function AddNew: TShablon_razdela;
    procedure Insert(index: Integer; NewObject: TShablon_razdela);
    property BoldObjects[index: Integer]: TShablon_razdela read GetBoldObject write SetBoldObject; default;
  end;

  TOrganizaciyaList = class(TPersonaList)
  protected
    function GetBoldObject(index: Integer): TOrganizaciya;
    procedure SetBoldObject(index: Integer; NewObject: TOrganizaciya);
  public
    function Includes(anObject: TOrganizaciya): Boolean;
    function IndexOf(anObject: TOrganizaciya): Integer;
    procedure Add(NewObject: TOrganizaciya);
    function AddNew: TOrganizaciya;
    procedure Insert(index: Integer; NewObject: TOrganizaciya);
    property BoldObjects[index: Integer]: TOrganizaciya read GetBoldObject write SetBoldObject; default;
  end;

  TGazetaList = class(TSpravochnikList)
  protected
    function GetBoldObject(index: Integer): TGazeta;
    procedure SetBoldObject(index: Integer; NewObject: TGazeta);
  public
    function Includes(anObject: TGazeta): Boolean;
    function IndexOf(anObject: TGazeta): Integer;
    procedure Add(NewObject: TGazeta);
    function AddNew: TGazeta;
    procedure Insert(index: Integer; NewObject: TGazeta);
    property BoldObjects[index: Integer]: TGazeta read GetBoldObject write SetBoldObject; default;
  end;

  TGruppa_vypuskovList = class(TSpravochnikList)
  protected
    function GetBoldObject(index: Integer): TGruppa_vypuskov;
    procedure SetBoldObject(index: Integer; NewObject: TGruppa_vypuskov);
  public
    function Includes(anObject: TGruppa_vypuskov): Boolean;
    function IndexOf(anObject: TGruppa_vypuskov): Integer;
    procedure Add(NewObject: TGruppa_vypuskov);
    function AddNew: TGruppa_vypuskov;
    procedure Insert(index: Integer; NewObject: TGruppa_vypuskov);
    property BoldObjects[index: Integer]: TGruppa_vypuskov read GetBoldObject write SetBoldObject; default;
  end;

  TKlyuchi_vklyuch__objyavleniiList = class(TSpravochnikList)
  protected
    function GetBoldObject(index: Integer): TKlyuchi_vklyuch__objyavlenii;
    procedure SetBoldObject(index: Integer; NewObject: TKlyuchi_vklyuch__objyavlenii);
  public
    function Includes(anObject: TKlyuchi_vklyuch__objyavlenii): Boolean;
    function IndexOf(anObject: TKlyuchi_vklyuch__objyavlenii): Integer;
    procedure Add(NewObject: TKlyuchi_vklyuch__objyavlenii);
    function AddNew: TKlyuchi_vklyuch__objyavlenii;
    procedure Insert(index: Integer; NewObject: TKlyuchi_vklyuch__objyavlenii);
    property BoldObjects[index: Integer]: TKlyuchi_vklyuch__objyavlenii read GetBoldObject write SetBoldObject; default;
  end;

  TKuponList = class(TSpravochnikList)
  protected
    function GetBoldObject(index: Integer): TKupon;
    procedure SetBoldObject(index: Integer; NewObject: TKupon);
  public
    function Includes(anObject: TKupon): Boolean;
    function IndexOf(anObject: TKupon): Integer;
    procedure Add(NewObject: TKupon);
    function AddNew: TKupon;
    procedure Insert(index: Integer; NewObject: TKupon);
    property BoldObjects[index: Integer]: TKupon read GetBoldObject write SetBoldObject; default;
  end;

  TPriznak_razdelaList = class(TSpravochnikList)
  protected
    function GetBoldObject(index: Integer): TPriznak_razdela;
    procedure SetBoldObject(index: Integer; NewObject: TPriznak_razdela);
  public
    function Includes(anObject: TPriznak_razdela): Boolean;
    function IndexOf(anObject: TPriznak_razdela): Integer;
    procedure Add(NewObject: TPriznak_razdela);
    function AddNew: TPriznak_razdela;
    procedure Insert(index: Integer; NewObject: TPriznak_razdela);
    property BoldObjects[index: Integer]: TPriznak_razdela read GetBoldObject write SetBoldObject; default;
  end;

  TRazdel_spravochnikaList = class(TSpravochnikList)
  protected
    function GetBoldObject(index: Integer): TRazdel_spravochnika;
    procedure SetBoldObject(index: Integer; NewObject: TRazdel_spravochnika);
  public
    function Includes(anObject: TRazdel_spravochnika): Boolean;
    function IndexOf(anObject: TRazdel_spravochnika): Integer;
    procedure Add(NewObject: TRazdel_spravochnika);
    function AddNew: TRazdel_spravochnika;
    procedure Insert(index: Integer; NewObject: TRazdel_spravochnika);
    property BoldObjects[index: Integer]: TRazdel_spravochnika read GetBoldObject write SetBoldObject; default;
  end;

  TTip_vypuskaList = class(TSpravochnikList)
  protected
    function GetBoldObject(index: Integer): TTip_vypuska;
    procedure SetBoldObject(index: Integer; NewObject: TTip_vypuska);
  public
    function Includes(anObject: TTip_vypuska): Boolean;
    function IndexOf(anObject: TTip_vypuska): Integer;
    procedure Add(NewObject: TTip_vypuska);
    function AddNew: TTip_vypuska;
    procedure Insert(index: Integer; NewObject: TTip_vypuska);
    property BoldObjects[index: Integer]: TTip_vypuska read GetBoldObject write SetBoldObject; default;
  end;

  TTip_razdelitelyaList = class(TSpravochnikList)
  protected
    function GetBoldObject(index: Integer): TTip_razdelitelya;
    procedure SetBoldObject(index: Integer; NewObject: TTip_razdelitelya);
  public
    function Includes(anObject: TTip_razdelitelya): Boolean;
    function IndexOf(anObject: TTip_razdelitelya): Integer;
    procedure Add(NewObject: TTip_razdelitelya);
    function AddNew: TTip_razdelitelya;
    procedure Insert(index: Integer; NewObject: TTip_razdelitelya);
    property BoldObjects[index: Integer]: TTip_razdelitelya read GetBoldObject write SetBoldObject; default;
  end;

  TTip_ramkiList = class(TSpravochnikList)
  protected
    function GetBoldObject(index: Integer): TTip_ramki;
    procedure SetBoldObject(index: Integer; NewObject: TTip_ramki);
  public
    function Includes(anObject: TTip_ramki): Boolean;
    function IndexOf(anObject: TTip_ramki): Integer;
    procedure Add(NewObject: TTip_ramki);
    function AddNew: TTip_ramki;
    procedure Insert(index: Integer; NewObject: TTip_ramki);
    property BoldObjects[index: Integer]: TTip_ramki read GetBoldObject write SetBoldObject; default;
  end;

  TTip_fonaList = class(TSpravochnikList)
  protected
    function GetBoldObject(index: Integer): TTip_fona;
    procedure SetBoldObject(index: Integer; NewObject: TTip_fona);
  public
    function Includes(anObject: TTip_fona): Boolean;
    function IndexOf(anObject: TTip_fona): Integer;
    procedure Add(NewObject: TTip_fona);
    function AddNew: TTip_fona;
    procedure Insert(index: Integer; NewObject: TTip_fona);
    property BoldObjects[index: Integer]: TTip_fona read GetBoldObject write SetBoldObject; default;
  end;

  TTolshina_liniiList = class(TSpravochnikList)
  protected
    function GetBoldObject(index: Integer): TTolshina_linii;
    procedure SetBoldObject(index: Integer; NewObject: TTolshina_linii);
  public
    function Includes(anObject: TTolshina_linii): Boolean;
    function IndexOf(anObject: TTolshina_linii): Integer;
    procedure Add(NewObject: TTolshina_linii);
    function AddNew: TTolshina_linii;
    procedure Insert(index: Integer; NewObject: TTolshina_linii);
    property BoldObjects[index: Integer]: TTolshina_linii read GetBoldObject write SetBoldObject; default;
  end;

  TObjyavlenieList = class(TShablon_objyavleniyaList)
  protected
    function GetBoldObject(index: Integer): TObjyavlenie;
    procedure SetBoldObject(index: Integer; NewObject: TObjyavlenie);
  public
    function Includes(anObject: TObjyavlenie): Boolean;
    function IndexOf(anObject: TObjyavlenie): Integer;
    procedure Add(NewObject: TObjyavlenie);
    function AddNew: TObjyavlenie;
    procedure Insert(index: Integer; NewObject: TObjyavlenie);
    property BoldObjects[index: Integer]: TObjyavlenie read GetBoldObject write SetBoldObject; default;
  end;

  TRazdelList = class(TShablon_razdelaList)
  protected
    function GetBoldObject(index: Integer): TRazdel;
    procedure SetBoldObject(index: Integer; NewObject: TRazdel);
  public
    function Includes(anObject: TRazdel): Boolean;
    function IndexOf(anObject: TRazdel): Integer;
    procedure Add(NewObject: TRazdel);
    function AddNew: TRazdel;
    procedure Insert(index: Integer; NewObject: TRazdel);
    property BoldObjects[index: Integer]: TRazdel read GetBoldObject write SetBoldObject; default;
  end;

  TKlientList = class(TOrganizaciyaList)
  protected
    function GetBoldObject(index: Integer): TKlient;
    procedure SetBoldObject(index: Integer; NewObject: TKlient);
  public
    function Includes(anObject: TKlient): Boolean;
    function IndexOf(anObject: TKlient): Integer;
    procedure Add(NewObject: TKlient);
    function AddNew: TKlient;
    procedure Insert(index: Integer; NewObject: TKlient);
    property BoldObjects[index: Integer]: TKlient read GetBoldObject write SetBoldObject; default;
  end;

  TPersonalList = class(TOrganizaciyaList)
  protected
    function GetBoldObject(index: Integer): TPersonal;
    procedure SetBoldObject(index: Integer; NewObject: TPersonal);
  public
    function Includes(anObject: TPersonal): Boolean;
    function IndexOf(anObject: TPersonal): Integer;
    procedure Add(NewObject: TPersonal);
    function AddNew: TPersonal;
    procedure Insert(index: Integer; NewObject: TPersonal);
    property BoldObjects[index: Integer]: TPersonal read GetBoldObject write SetBoldObject; default;
  end;

function GeneratedCodeCRC: String;

implementation

uses
  // implementation uses
  // implementation dependencies
  // other
  BoldGeneratedCodeDictionary;

{$ENDIF}

